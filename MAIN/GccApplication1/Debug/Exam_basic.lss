
Exam_basic.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000dc  00800100  00001550  000015e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001550  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000010  008001dc  008001dc  000016c0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000016c0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000171c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000208  00000000  00000000  00001760  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000025a6  00000000  00000000  00001968  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b61  00000000  00000000  00003f0e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001166  00000000  00000000  00004a6f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003fc  00000000  00000000  00005bd8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000866  00000000  00000000  00005fd4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000012f1  00000000  00000000  0000683a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000198  00000000  00000000  00007b2b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       8:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      10:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      14:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      18:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      1c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      24:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      28:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      2c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      30:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      34:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      38:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      3c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      40:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      44:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      48:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      4c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      50:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      54:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      58:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      5c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      60:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2332>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
     176:	11 e0       	ldi	r17, 0x01	; 1
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	e0 e5       	ldi	r30, 0x50	; 80
     17e:	f5 e1       	ldi	r31, 0x15	; 21
     180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
     182:	05 90       	lpm	r0, Z+
     184:	0d 92       	st	X+, r0
     186:	ac 3d       	cpi	r26, 0xDC	; 220
     188:	b1 07       	cpc	r27, r17
     18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>

0000018c <__do_clear_bss>:
     18c:	21 e0       	ldi	r18, 0x01	; 1
     18e:	ac ed       	ldi	r26, 0xDC	; 220
     190:	b1 e0       	ldi	r27, 0x01	; 1
     192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
     194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
     196:	ac 3e       	cpi	r26, 0xEC	; 236
     198:	b2 07       	cpc	r27, r18
     19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
     19c:	0e 94 97 04 	call	0x92e	; 0x92e <main>
     1a0:	0c 94 a6 0a 	jmp	0x154c	; 0x154c <_exit>

000001a4 <__bad_interrupt>:
     1a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a8 <LCD_write_PCF8574>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1a8:	cf 93       	push	r28
     1aa:	c8 2f       	mov	r28, r24
     1ac:	8e e4       	ldi	r24, 0x4E	; 78
     1ae:	0e 94 f6 04 	call	0x9ec	; 0x9ec <i2c_start_wait>
     1b2:	80 91 dc 01 	lds	r24, 0x01DC	; 0x8001dc <__data_end>
     1b6:	8c 2b       	or	r24, r28
     1b8:	0e 94 25 05 	call	0xa4a	; 0xa4a <i2c_write>
     1bc:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_stop>
     1c0:	cf 91       	pop	r28
     1c2:	08 95       	ret

000001c4 <LCD_pulse_enable_neg>:
     1c4:	cf 93       	push	r28
     1c6:	c8 2f       	mov	r28, r24
     1c8:	84 60       	ori	r24, 0x04	; 4
     1ca:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCD_write_PCF8574>
     1ce:	85 e0       	ldi	r24, 0x05	; 5
     1d0:	8a 95       	dec	r24
     1d2:	f1 f7       	brne	.-4      	; 0x1d0 <LCD_pulse_enable_neg+0xc>
     1d4:	00 00       	nop
     1d6:	8c 2f       	mov	r24, r28
     1d8:	8b 7f       	andi	r24, 0xFB	; 251
     1da:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCD_write_PCF8574>
     1de:	87 ec       	ldi	r24, 0xC7	; 199
     1e0:	90 e0       	ldi	r25, 0x00	; 0
     1e2:	01 97       	sbiw	r24, 0x01	; 1
     1e4:	f1 f7       	brne	.-4      	; 0x1e2 <LCD_pulse_enable_neg+0x1e>
     1e6:	00 c0       	rjmp	.+0      	; 0x1e8 <LCD_pulse_enable_neg+0x24>
     1e8:	00 00       	nop
     1ea:	cf 91       	pop	r28
     1ec:	08 95       	ret

000001ee <LCD_write4bits>:
     1ee:	cf 93       	push	r28
     1f0:	c8 2f       	mov	r28, r24
     1f2:	cd 7f       	andi	r28, 0xFD	; 253
     1f4:	8c 2f       	mov	r24, r28
     1f6:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCD_write_PCF8574>
     1fa:	8c 2f       	mov	r24, r28
     1fc:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <LCD_pulse_enable_neg>
     200:	cf 91       	pop	r28
     202:	08 95       	ret

00000204 <LCD_send>:
     204:	cf 93       	push	r28
     206:	df 93       	push	r29
     208:	c6 2f       	mov	r28, r22
     20a:	98 2f       	mov	r25, r24
     20c:	90 7f       	andi	r25, 0xF0	; 240
     20e:	d8 2f       	mov	r29, r24
     210:	d2 95       	swap	r29
     212:	d0 7f       	andi	r29, 0xF0	; 240
     214:	89 2f       	mov	r24, r25
     216:	86 2b       	or	r24, r22
     218:	84 60       	ori	r24, 0x04	; 4
     21a:	0e 94 f7 00 	call	0x1ee	; 0x1ee <LCD_write4bits>
     21e:	8d 2f       	mov	r24, r29
     220:	8c 2b       	or	r24, r28
     222:	84 60       	ori	r24, 0x04	; 4
     224:	0e 94 f7 00 	call	0x1ee	; 0x1ee <LCD_write4bits>
     228:	df 91       	pop	r29
     22a:	cf 91       	pop	r28
     22c:	08 95       	ret

0000022e <LCD_write_char>:
     22e:	61 e0       	ldi	r22, 0x01	; 1
     230:	0e 94 02 01 	call	0x204	; 0x204 <LCD_send>
     234:	08 95       	ret

00000236 <putchr>:
     236:	0e 94 17 01 	call	0x22e	; 0x22e <LCD_write_char>
     23a:	80 e0       	ldi	r24, 0x00	; 0
     23c:	90 e0       	ldi	r25, 0x00	; 0
     23e:	08 95       	ret

00000240 <LCD_clear>:
     240:	60 e0       	ldi	r22, 0x00	; 0
     242:	81 e0       	ldi	r24, 0x01	; 1
     244:	0e 94 02 01 	call	0x204	; 0x204 <LCD_send>
     248:	2f ef       	ldi	r18, 0xFF	; 255
     24a:	86 e7       	ldi	r24, 0x76	; 118
     24c:	91 e0       	ldi	r25, 0x01	; 1
     24e:	21 50       	subi	r18, 0x01	; 1
     250:	80 40       	sbci	r24, 0x00	; 0
     252:	90 40       	sbci	r25, 0x00	; 0
     254:	e1 f7       	brne	.-8      	; 0x24e <LCD_clear+0xe>
     256:	00 c0       	rjmp	.+0      	; 0x258 <LCD_clear+0x18>
     258:	00 00       	nop
     25a:	08 95       	ret

0000025c <LCD_set_cursor>:
	_delay_us(30000);  // this command takes a long time!
	#endif
}

void LCD_set_cursor(unsigned char col, unsigned char row)
{
     25c:	cf 93       	push	r28
     25e:	df 93       	push	r29
     260:	cd b7       	in	r28, 0x3d	; 61
     262:	de b7       	in	r29, 0x3e	; 62
     264:	28 97       	sbiw	r28, 0x08	; 8
     266:	0f b6       	in	r0, 0x3f	; 63
     268:	f8 94       	cli
     26a:	de bf       	out	0x3e, r29	; 62
     26c:	0f be       	out	0x3f, r0	; 63
     26e:	cd bf       	out	0x3d, r28	; 61
	int row_offsets[] = { LCD_LINE1, LCD_LINE2, LCD_LINE3, LCD_LINE4 };
     270:	98 e0       	ldi	r25, 0x08	; 8
     272:	e4 e1       	ldi	r30, 0x14	; 20
     274:	f1 e0       	ldi	r31, 0x01	; 1
     276:	de 01       	movw	r26, r28
     278:	11 96       	adiw	r26, 0x01	; 1
     27a:	01 90       	ld	r0, Z+
     27c:	0d 92       	st	X+, r0
     27e:	9a 95       	dec	r25
     280:	e1 f7       	brne	.-8      	; 0x27a <LCD_set_cursor+0x1e>
	if ( row >= _numlines ) {
     282:	90 91 dd 01 	lds	r25, 0x01DD	; 0x8001dd <_numlines>
     286:	69 17       	cp	r22, r25
     288:	10 f0       	brcs	.+4      	; 0x28e <LCD_set_cursor+0x32>
		row = _numlines-1;    // we count rows starting w/0
     28a:	6f ef       	ldi	r22, 0xFF	; 255
     28c:	69 0f       	add	r22, r25
	}

	LCD_command_write(LCD_DD_RAM_ADDRESS | (col + row_offsets[row]));
     28e:	e6 2f       	mov	r30, r22
     290:	f0 e0       	ldi	r31, 0x00	; 0
     292:	ee 0f       	add	r30, r30
     294:	ff 1f       	adc	r31, r31
     296:	21 e0       	ldi	r18, 0x01	; 1
     298:	30 e0       	ldi	r19, 0x00	; 0
     29a:	2c 0f       	add	r18, r28
     29c:	3d 1f       	adc	r19, r29
     29e:	e2 0f       	add	r30, r18
     2a0:	f3 1f       	adc	r31, r19
     2a2:	90 81       	ld	r25, Z
     2a4:	89 0f       	add	r24, r25


/*********** mid level commands, for sending data/cmds */

inline void LCD_command_write(unsigned char value) {
	LCD_send(value, Rs & ~Rs);
     2a6:	60 e0       	ldi	r22, 0x00	; 0
     2a8:	80 68       	ori	r24, 0x80	; 128
     2aa:	0e 94 02 01 	call	0x204	; 0x204 <LCD_send>
	if ( row >= _numlines ) {
		row = _numlines-1;    // we count rows starting w/0
	}

	LCD_command_write(LCD_DD_RAM_ADDRESS | (col + row_offsets[row]));
}
     2ae:	28 96       	adiw	r28, 0x08	; 8
     2b0:	0f b6       	in	r0, 0x3f	; 63
     2b2:	f8 94       	cli
     2b4:	de bf       	out	0x3e, r29	; 62
     2b6:	0f be       	out	0x3f, r0	; 63
     2b8:	cd bf       	out	0x3d, r28	; 61
     2ba:	df 91       	pop	r29
     2bc:	cf 91       	pop	r28
     2be:	08 95       	ret

000002c0 <LCD_display_off>:

// Turn the display on/off (quickly)
void LCD_display_off(void) {
	_displayfunction &= ~LCD_DISPLAY_ON;
     2c0:	80 91 df 01 	lds	r24, 0x01DF	; 0x8001df <_displayfunction>
     2c4:	8b 7f       	andi	r24, 0xFB	; 251
     2c6:	80 93 df 01 	sts	0x01DF, r24	; 0x8001df <_displayfunction>


/*********** mid level commands, for sending data/cmds */

inline void LCD_command_write(unsigned char value) {
	LCD_send(value, Rs & ~Rs);
     2ca:	60 e0       	ldi	r22, 0x00	; 0
     2cc:	88 60       	ori	r24, 0x08	; 8
     2ce:	0e 94 02 01 	call	0x204	; 0x204 <LCD_send>
     2d2:	08 95       	ret

000002d4 <LCD_display_on>:
	_displayfunction &= ~LCD_DISPLAY_ON;
	LCD_command_write(LCD_DISPLAY_ON_OFF | _displayfunction);
}

void LCD_display_on(void) {
	_displayfunction |= LCD_DISPLAY_ON;
     2d4:	80 91 df 01 	lds	r24, 0x01DF	; 0x8001df <_displayfunction>
     2d8:	98 2f       	mov	r25, r24
     2da:	94 60       	ori	r25, 0x04	; 4
     2dc:	90 93 df 01 	sts	0x01DF, r25	; 0x8001df <_displayfunction>


/*********** mid level commands, for sending data/cmds */

inline void LCD_command_write(unsigned char value) {
	LCD_send(value, Rs & ~Rs);
     2e0:	60 e0       	ldi	r22, 0x00	; 0
     2e2:	8c 60       	ori	r24, 0x0C	; 12
     2e4:	0e 94 02 01 	call	0x204	; 0x204 <LCD_send>
     2e8:	08 95       	ret

000002ea <LCD_init>:

FILE mystdout = FDEV_SETUP_STREAM(putchr, NULL, _FDEV_SETUP_WRITE);

void LCD_init(void){
	
	stdout = &mystdout;
     2ea:	80 e0       	ldi	r24, 0x00	; 0
     2ec:	91 e0       	ldi	r25, 0x01	; 1
     2ee:	90 93 e9 01 	sts	0x01E9, r25	; 0x8001e9 <__iob+0x3>
     2f2:	80 93 e8 01 	sts	0x01E8, r24	; 0x8001e8 <__iob+0x2>
	//_backlightval &= ~Bl; // Off at start up
	_backlightval |= Bl; // On at start up
     2f6:	80 91 dc 01 	lds	r24, 0x01DC	; 0x8001dc <__data_end>
     2fa:	88 60       	ori	r24, 0x08	; 8
     2fc:	80 93 dc 01 	sts	0x01DC, r24	; 0x8001dc <__data_end>
	_numlines = LCD_MAX_ROWS;
     300:	84 e0       	ldi	r24, 0x04	; 4
     302:	80 93 dd 01 	sts	0x01DD, r24	; 0x8001dd <_numlines>
     306:	2f ef       	ldi	r18, 0xFF	; 255
     308:	80 e7       	ldi	r24, 0x70	; 112
     30a:	92 e0       	ldi	r25, 0x02	; 2
     30c:	21 50       	subi	r18, 0x01	; 1
     30e:	80 40       	sbci	r24, 0x00	; 0
     310:	90 40       	sbci	r25, 0x00	; 0
     312:	e1 f7       	brne	.-8      	; 0x30c <LCD_init+0x22>
     314:	00 c0       	rjmp	.+0      	; 0x316 <LCD_init+0x2c>
     316:	00 00       	nop
	// Ensure supply rails are up before config sequence
	_delay_us(50000);

	// Set all control and data lines low. D4 - D7, En (High=1), Rw (Low = 0 or Write), Rs (Control/Instruction) (Low = 0 or Control)
	//I2C_Write_Byte_Single_Reg(LCD_PCF8574_ADDR, LCD_INIT); // Backlight off (Bit 3 = 0)
	i2c_start_wait(LCD_PCF8574_ADDR + I2C_WRITE);
     318:	8e e4       	ldi	r24, 0x4E	; 78
     31a:	0e 94 f6 04 	call	0x9ec	; 0x9ec <i2c_start_wait>
	i2c_write(LCD_INIT);
     31e:	84 e0       	ldi	r24, 0x04	; 4
     320:	0e 94 25 05 	call	0xa4a	; 0xa4a <i2c_write>
     324:	8f e8       	ldi	r24, 0x8F	; 143
     326:	91 e0       	ldi	r25, 0x01	; 1
     328:	01 97       	sbiw	r24, 0x01	; 1
     32a:	f1 f7       	brne	.-4      	; 0x328 <LCD_init+0x3e>
     32c:	00 c0       	rjmp	.+0      	; 0x32e <LCD_init+0x44>
     32e:	00 00       	nop
	_delay_us(100);

	// Sequence to put the LCD into 4 bit mode this is according to the hitachi HD44780 datasheet page 109

	// we start in 8bit mode
	LCD_write4bits(LCD_8BIT_INIT);
     330:	80 e3       	ldi	r24, 0x30	; 48
     332:	0e 94 f7 00 	call	0x1ee	; 0x1ee <LCD_write4bits>
     336:	8f e4       	ldi	r24, 0x4F	; 79
     338:	96 e4       	ldi	r25, 0x46	; 70
     33a:	01 97       	sbiw	r24, 0x01	; 1
     33c:	f1 f7       	brne	.-4      	; 0x33a <LCD_init+0x50>
     33e:	00 c0       	rjmp	.+0      	; 0x340 <LCD_init+0x56>
     340:	00 00       	nop
	_delay_us(4500);  // wait more than 4.1ms

	// second write
	LCD_write4bits(LCD_8BIT_INIT);
     342:	80 e3       	ldi	r24, 0x30	; 48
     344:	0e 94 f7 00 	call	0x1ee	; 0x1ee <LCD_write4bits>
     348:	87 e5       	ldi	r24, 0x57	; 87
     34a:	92 e0       	ldi	r25, 0x02	; 2
     34c:	01 97       	sbiw	r24, 0x01	; 1
     34e:	f1 f7       	brne	.-4      	; 0x34c <LCD_init+0x62>
     350:	00 c0       	rjmp	.+0      	; 0x352 <LCD_init+0x68>
     352:	00 00       	nop
	_delay_us(150); // wait > 100us

	// third write
	LCD_write4bits(LCD_8BIT_INIT);
     354:	80 e3       	ldi	r24, 0x30	; 48
     356:	0e 94 f7 00 	call	0x1ee	; 0x1ee <LCD_write4bits>
     35a:	87 e5       	ldi	r24, 0x57	; 87
     35c:	92 e0       	ldi	r25, 0x02	; 2
     35e:	01 97       	sbiw	r24, 0x01	; 1
     360:	f1 f7       	brne	.-4      	; 0x35e <LCD_init+0x74>
     362:	00 c0       	rjmp	.+0      	; 0x364 <LCD_init+0x7a>
     364:	00 00       	nop
	_delay_us(150);

	// now set to 4-bit interface
	LCD_write4bits(LCD_4BIT_INIT);
     366:	80 e2       	ldi	r24, 0x20	; 32
     368:	0e 94 f7 00 	call	0x1ee	; 0x1ee <LCD_write4bits>
     36c:	87 e5       	ldi	r24, 0x57	; 87
     36e:	92 e0       	ldi	r25, 0x02	; 2
     370:	01 97       	sbiw	r24, 0x01	; 1
     372:	f1 f7       	brne	.-4      	; 0x370 <LCD_init+0x86>
     374:	00 c0       	rjmp	.+0      	; 0x376 <LCD_init+0x8c>
     376:	00 00       	nop


/*********** mid level commands, for sending data/cmds */

inline void LCD_command_write(unsigned char value) {
	LCD_send(value, Rs & ~Rs);
     378:	60 e0       	ldi	r22, 0x00	; 0
     37a:	88 e2       	ldi	r24, 0x28	; 40
     37c:	0e 94 02 01 	call	0x204	; 0x204 <LCD_send>
	// set # lines, font size, etc.
	_functionset = LCD_INTF4BITS | LCD_TWO_LINES | LCD_FONT_5_7;
	LCD_command_write(LCD_FUNCTION_SET | _functionset);
	//DelayMicroseconds(150);

	_displayfunction = LCD_DISPLAY_OFF | LCD_CURSOR_OFF | LCD_BLINKING_OFF;
     380:	10 92 df 01 	sts	0x01DF, r1	; 0x8001df <_displayfunction>
	LCD_display_off();
     384:	0e 94 60 01 	call	0x2c0	; 0x2c0 <LCD_display_off>

	// turn the display on with no cursor or blinking default
	LCD_display_on();
     388:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <LCD_display_on>

	// set the entry mode
	_entrymodeset = LCD_INCREMENT | LCD_SHIFT_OFF; // Initialize to default text direction (for roman languages)
     38c:	82 e0       	ldi	r24, 0x02	; 2
     38e:	80 93 e0 01 	sts	0x01E0, r24	; 0x8001e0 <_entrymodeset>


/*********** mid level commands, for sending data/cmds */

inline void LCD_command_write(unsigned char value) {
	LCD_send(value, Rs & ~Rs);
     392:	60 e0       	ldi	r22, 0x00	; 0
     394:	86 e0       	ldi	r24, 0x06	; 6
     396:	0e 94 02 01 	call	0x204	; 0x204 <LCD_send>
	_entrymodeset = LCD_INCREMENT | LCD_SHIFT_OFF; // Initialize to default text direction (for roman languages)
	LCD_command_write(LCD_ENTRY_MODE_SET | _entrymodeset);

	// Display Function set
	// _displayfunction = LCD_DISPLAY_ON | LCD_CURSOR_OFF | LCD_BLINKING_OFF;
	LCD_command_write(LCD_DISPLAY_ON_OFF | _displayfunction);
     39a:	80 91 df 01 	lds	r24, 0x01DF	; 0x8001df <_displayfunction>


/*********** mid level commands, for sending data/cmds */

inline void LCD_command_write(unsigned char value) {
	LCD_send(value, Rs & ~Rs);
     39e:	60 e0       	ldi	r22, 0x00	; 0
     3a0:	88 60       	ori	r24, 0x08	; 8
     3a2:	0e 94 02 01 	call	0x204	; 0x204 <LCD_send>
	// Display Function set
	// _displayfunction = LCD_DISPLAY_ON | LCD_CURSOR_OFF | LCD_BLINKING_OFF;
	LCD_command_write(LCD_DISPLAY_ON_OFF | _displayfunction);

	// Display Control set
	_displaycontrol = LCD_DISPLAY_SHIFT | LCD_SHIFT_LEFT;
     3a6:	88 e0       	ldi	r24, 0x08	; 8
     3a8:	80 93 de 01 	sts	0x01DE, r24	; 0x8001de <_displaycontrol>


/*********** mid level commands, for sending data/cmds */

inline void LCD_command_write(unsigned char value) {
	LCD_send(value, Rs & ~Rs);
     3ac:	60 e0       	ldi	r22, 0x00	; 0
     3ae:	88 e1       	ldi	r24, 0x18	; 24
     3b0:	0e 94 02 01 	call	0x204	; 0x204 <LCD_send>
	// Display Control set
	_displaycontrol = LCD_DISPLAY_SHIFT | LCD_SHIFT_LEFT;
	LCD_command_write(LCD_MV_CUR_SHIFT_DISPLAY | _displaycontrol);

	// clear display and return cursor to home position. (Address 0)
	LCD_clear();
     3b4:	0e 94 20 01 	call	0x240	; 0x240 <LCD_clear>
     3b8:	08 95       	ret

000003ba <intro_screen>:
		
	
	return 0;
}

void intro_screen(){
     3ba:	cf 92       	push	r12
     3bc:	df 92       	push	r13
     3be:	ef 92       	push	r14
     3c0:	ff 92       	push	r15
     3c2:	0f 93       	push	r16
     3c4:	1f 93       	push	r17
     3c6:	cf 93       	push	r28
     3c8:	df 93       	push	r29
     3ca:	cd b7       	in	r28, 0x3d	; 61
     3cc:	de b7       	in	r29, 0x3e	; 62
     3ce:	2a 97       	sbiw	r28, 0x0a	; 10
     3d0:	0f b6       	in	r0, 0x3f	; 63
     3d2:	f8 94       	cli
     3d4:	de bf       	out	0x3e, r29	; 62
     3d6:	0f be       	out	0x3f, r0	; 63
     3d8:	cd bf       	out	0x3d, r28	; 61
	 int name_array[5], count_l=0,written=0;			//Array for names, letter count, if name was written
     3da:	e1 2c       	mov	r14, r1
     3dc:	f1 2c       	mov	r15, r1
	 while (PINC!=B4)
     3de:	73 c2       	rjmp	.+1254   	; 0x8c6 <__DATA_REGION_LENGTH__+0xc6>
	 {	
		 if(!written && name_f){					//if not written and flag set, write to eeprom
     3e0:	e1 14       	cp	r14, r1
     3e2:	f1 04       	cpc	r15, r1
     3e4:	c1 f5       	brne	.+112    	; 0x456 <__EEPROM_REGION_LENGTH__+0x56>
     3e6:	80 91 e2 01 	lds	r24, 0x01E2	; 0x8001e2 <name_f>
     3ea:	88 23       	and	r24, r24
     3ec:	a1 f1       	breq	.+104    	; 0x456 <__EEPROM_REGION_LENGTH__+0x56>
			 LCD_clear();
     3ee:	0e 94 20 01 	call	0x240	; 0x240 <LCD_clear>
			 LCD_set_cursor(0,0);
     3f2:	60 e0       	ldi	r22, 0x00	; 0
     3f4:	80 e0       	ldi	r24, 0x00	; 0
     3f6:	0e 94 2e 01 	call	0x25c	; 0x25c <LCD_set_cursor>
			 for(int i=0;i<5;i++){
     3fa:	00 e0       	ldi	r16, 0x00	; 0
     3fc:	10 e0       	ldi	r17, 0x00	; 0
     3fe:	23 c0       	rjmp	.+70     	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
				 printf("EEPROM WRITE");
     400:	8c e1       	ldi	r24, 0x1C	; 28
     402:	91 e0       	ldi	r25, 0x01	; 1
     404:	9f 93       	push	r25
     406:	8f 93       	push	r24
     408:	0e 94 15 0a 	call	0x142a	; 0x142a <printf>
				 eeprom_write_byte((uint8_t *)i+3,(uint8_t)name_array[i]);
     40c:	f8 01       	movw	r30, r16
     40e:	ee 0f       	add	r30, r30
     410:	ff 1f       	adc	r31, r31
     412:	21 e0       	ldi	r18, 0x01	; 1
     414:	30 e0       	ldi	r19, 0x00	; 0
     416:	2c 0f       	add	r18, r28
     418:	3d 1f       	adc	r19, r29
     41a:	e2 0f       	add	r30, r18
     41c:	f3 1f       	adc	r31, r19
     41e:	60 81       	ld	r22, Z
     420:	c8 01       	movw	r24, r16
     422:	03 96       	adiw	r24, 0x03	; 3
     424:	0e 94 98 0a 	call	0x1530	; 0x1530 <eeprom_write_byte>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     428:	3f ef       	ldi	r19, 0xFF	; 255
     42a:	85 ea       	ldi	r24, 0xA5	; 165
     42c:	9e e0       	ldi	r25, 0x0E	; 14
     42e:	31 50       	subi	r19, 0x01	; 1
     430:	80 40       	sbci	r24, 0x00	; 0
     432:	90 40       	sbci	r25, 0x00	; 0
     434:	e1 f7       	brne	.-8      	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
     436:	00 c0       	rjmp	.+0      	; 0x438 <__EEPROM_REGION_LENGTH__+0x38>
     438:	00 00       	nop
				 _delay_ms(300);
				 LCD_clear();
     43a:	0e 94 20 01 	call	0x240	; 0x240 <LCD_clear>
	 while (PINC!=B4)
	 {	
		 if(!written && name_f){					//if not written and flag set, write to eeprom
			 LCD_clear();
			 LCD_set_cursor(0,0);
			 for(int i=0;i<5;i++){
     43e:	0f 5f       	subi	r16, 0xFF	; 255
     440:	1f 4f       	sbci	r17, 0xFF	; 255
     442:	0f 90       	pop	r0
     444:	0f 90       	pop	r0
     446:	05 30       	cpi	r16, 0x05	; 5
     448:	11 05       	cpc	r17, r1
     44a:	d4 f2       	brlt	.-76     	; 0x400 <__EEPROM_REGION_LENGTH__>
				 eeprom_write_byte((uint8_t *)i+3,(uint8_t)name_array[i]);
				 _delay_ms(300);
				 LCD_clear();
			 }
			 written=1;
			 LCD_clear();
     44c:	0e 94 20 01 	call	0x240	; 0x240 <LCD_clear>
				 printf("EEPROM WRITE");
				 eeprom_write_byte((uint8_t *)i+3,(uint8_t)name_array[i]);
				 _delay_ms(300);
				 LCD_clear();
			 }
			 written=1;
     450:	ee 24       	eor	r14, r14
     452:	e3 94       	inc	r14
     454:	f1 2c       	mov	r15, r1
			 LCD_clear();
		 }
		 LCD_set_cursor(0,0);
     456:	60 e0       	ldi	r22, 0x00	; 0
     458:	80 e0       	ldi	r24, 0x00	; 0
     45a:	0e 94 2e 01 	call	0x25c	; 0x25c <LCD_set_cursor>
		 if(name_f){
     45e:	80 91 e2 01 	lds	r24, 0x01E2	; 0x8001e2 <name_f>
     462:	88 23       	and	r24, r24
     464:	f1 f0       	breq	.+60     	; 0x4a2 <__EEPROM_REGION_LENGTH__+0xa2>
			 printf("Name:");
     466:	89 e9       	ldi	r24, 0x99	; 153
     468:	91 e0       	ldi	r25, 0x01	; 1
     46a:	9f 93       	push	r25
     46c:	8f 93       	push	r24
     46e:	0e 94 15 0a 	call	0x142a	; 0x142a <printf>
				 for(int i=0;i<5;i++){
     472:	0f 90       	pop	r0
     474:	0f 90       	pop	r0
     476:	00 e0       	ldi	r16, 0x00	; 0
     478:	10 e0       	ldi	r17, 0x00	; 0
     47a:	0f c0       	rjmp	.+30     	; 0x49a <__EEPROM_REGION_LENGTH__+0x9a>
					 printf("%c",name_array[i]);
     47c:	f8 01       	movw	r30, r16
     47e:	ee 0f       	add	r30, r30
     480:	ff 1f       	adc	r31, r31
     482:	21 e0       	ldi	r18, 0x01	; 1
     484:	30 e0       	ldi	r19, 0x00	; 0
     486:	2c 0f       	add	r18, r28
     488:	3d 1f       	adc	r19, r29
     48a:	e2 0f       	add	r30, r18
     48c:	f3 1f       	adc	r31, r19
     48e:	80 81       	ld	r24, Z
     490:	91 81       	ldd	r25, Z+1	; 0x01
     492:	0e 94 2b 0a 	call	0x1456	; 0x1456 <putchar>
			 LCD_clear();
		 }
		 LCD_set_cursor(0,0);
		 if(name_f){
			 printf("Name:");
				 for(int i=0;i<5;i++){
     496:	0f 5f       	subi	r16, 0xFF	; 255
     498:	1f 4f       	sbci	r17, 0xFF	; 255
     49a:	05 30       	cpi	r16, 0x05	; 5
     49c:	11 05       	cpc	r17, r1
     49e:	74 f3       	brlt	.-36     	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
     4a0:	08 c0       	rjmp	.+16     	; 0x4b2 <__EEPROM_REGION_LENGTH__+0xb2>
					 printf("%c",name_array[i]);
				 }	 
			 
		 }
		 else printf("Name: NOT SET");
     4a2:	89 e2       	ldi	r24, 0x29	; 41
     4a4:	91 e0       	ldi	r25, 0x01	; 1
     4a6:	9f 93       	push	r25
     4a8:	8f 93       	push	r24
     4aa:	0e 94 15 0a 	call	0x142a	; 0x142a <printf>
     4ae:	0f 90       	pop	r0
     4b0:	0f 90       	pop	r0
		 LCD_set_cursor(0,1);
     4b2:	61 e0       	ldi	r22, 0x01	; 1
     4b4:	80 e0       	ldi	r24, 0x00	; 0
     4b6:	0e 94 2e 01 	call	0x25c	; 0x25c <LCD_set_cursor>
		 if(w_f) printf("Weight: %dkg",weight);			//if flag set print w
     4ba:	80 91 e1 01 	lds	r24, 0x01E1	; 0x8001e1 <w_f>
     4be:	88 23       	and	r24, r24
     4c0:	79 f0       	breq	.+30     	; 0x4e0 <__EEPROM_REGION_LENGTH__+0xe0>
     4c2:	80 91 e5 01 	lds	r24, 0x01E5	; 0x8001e5 <weight>
     4c6:	1f 92       	push	r1
     4c8:	8f 93       	push	r24
     4ca:	87 e3       	ldi	r24, 0x37	; 55
     4cc:	91 e0       	ldi	r25, 0x01	; 1
     4ce:	9f 93       	push	r25
     4d0:	8f 93       	push	r24
     4d2:	0e 94 15 0a 	call	0x142a	; 0x142a <printf>
     4d6:	0f 90       	pop	r0
     4d8:	0f 90       	pop	r0
     4da:	0f 90       	pop	r0
     4dc:	0f 90       	pop	r0
     4de:	08 c0       	rjmp	.+16     	; 0x4f0 <__EEPROM_REGION_LENGTH__+0xf0>
		 else printf("Weight: Not Set"); 
     4e0:	84 e4       	ldi	r24, 0x44	; 68
     4e2:	91 e0       	ldi	r25, 0x01	; 1
     4e4:	9f 93       	push	r25
     4e6:	8f 93       	push	r24
     4e8:	0e 94 15 0a 	call	0x142a	; 0x142a <printf>
     4ec:	0f 90       	pop	r0
     4ee:	0f 90       	pop	r0
		 LCD_set_cursor(0,2);
     4f0:	62 e0       	ldi	r22, 0x02	; 2
     4f2:	80 e0       	ldi	r24, 0x00	; 0
     4f4:	0e 94 2e 01 	call	0x25c	; 0x25c <LCD_set_cursor>
		 printf("SET:");
     4f8:	84 e5       	ldi	r24, 0x54	; 84
     4fa:	91 e0       	ldi	r25, 0x01	; 1
     4fc:	9f 93       	push	r25
     4fe:	8f 93       	push	r24
     500:	0e 94 15 0a 	call	0x142a	; 0x142a <printf>
		 LCD_set_cursor(0,3);
     504:	63 e0       	ldi	r22, 0x03	; 3
     506:	80 e0       	ldi	r24, 0x00	; 0
     508:	0e 94 2e 01 	call	0x25c	; 0x25c <LCD_set_cursor>
		 printf("Weight|");
     50c:	89 e5       	ldi	r24, 0x59	; 89
     50e:	91 e0       	ldi	r25, 0x01	; 1
     510:	9f 93       	push	r25
     512:	8f 93       	push	r24
     514:	0e 94 15 0a 	call	0x142a	; 0x142a <printf>
		 LCD_set_cursor(7,3);
     518:	63 e0       	ldi	r22, 0x03	; 3
     51a:	87 e0       	ldi	r24, 0x07	; 7
     51c:	0e 94 2e 01 	call	0x25c	; 0x25c <LCD_set_cursor>
		 printf("Height|");
     520:	81 e6       	ldi	r24, 0x61	; 97
     522:	91 e0       	ldi	r25, 0x01	; 1
     524:	9f 93       	push	r25
     526:	8f 93       	push	r24
     528:	0e 94 15 0a 	call	0x142a	; 0x142a <printf>
		 LCD_set_cursor(14,3);
     52c:	63 e0       	ldi	r22, 0x03	; 3
     52e:	8e e0       	ldi	r24, 0x0E	; 14
     530:	0e 94 2e 01 	call	0x25c	; 0x25c <LCD_set_cursor>
		 printf("Name");
     534:	89 e6       	ldi	r24, 0x69	; 105
     536:	91 e0       	ldi	r25, 0x01	; 1
     538:	9f 93       	push	r25
     53a:	8f 93       	push	r24
     53c:	0e 94 15 0a 	call	0x142a	; 0x142a <printf>
		 
		 if(PINC==B1){
     540:	86 b1       	in	r24, 0x06	; 6
     542:	0f b6       	in	r0, 0x3f	; 63
     544:	f8 94       	cli
     546:	de bf       	out	0x3e, r29	; 62
     548:	0f be       	out	0x3f, r0	; 63
     54a:	cd bf       	out	0x3d, r28	; 61
     54c:	8e 33       	cpi	r24, 0x3E	; 62
     54e:	09 f0       	breq	.+2      	; 0x552 <__EEPROM_REGION_LENGTH__+0x152>
     550:	ba c0       	rjmp	.+372    	; 0x6c6 <__EEPROM_REGION_LENGTH__+0x2c6>
			 LCD_clear();
     552:	0e 94 20 01 	call	0x240	; 0x240 <LCD_clear>
     556:	ff ef       	ldi	r31, 0xFF	; 255
     558:	21 ee       	ldi	r18, 0xE1	; 225
     55a:	34 e0       	ldi	r19, 0x04	; 4
     55c:	f1 50       	subi	r31, 0x01	; 1
     55e:	20 40       	sbci	r18, 0x00	; 0
     560:	30 40       	sbci	r19, 0x00	; 0
     562:	e1 f7       	brne	.-8      	; 0x55c <__EEPROM_REGION_LENGTH__+0x15c>
     564:	00 c0       	rjmp	.+0      	; 0x566 <__EEPROM_REGION_LENGTH__+0x166>
     566:	00 00       	nop
     568:	99 c0       	rjmp	.+306    	; 0x69c <__EEPROM_REGION_LENGTH__+0x29c>
			 _delay_ms(100);
			 while(PINC!=B4){
				 LCD_set_cursor(0,0);
     56a:	60 e0       	ldi	r22, 0x00	; 0
     56c:	80 e0       	ldi	r24, 0x00	; 0
     56e:	0e 94 2e 01 	call	0x25c	; 0x25c <LCD_set_cursor>
				 printf("Set Your Weight:");
     572:	8e e6       	ldi	r24, 0x6E	; 110
     574:	91 e0       	ldi	r25, 0x01	; 1
     576:	9f 93       	push	r25
     578:	8f 93       	push	r24
     57a:	0e 94 15 0a 	call	0x142a	; 0x142a <printf>
				 LCD_set_cursor(0,1);
     57e:	61 e0       	ldi	r22, 0x01	; 1
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	0e 94 2e 01 	call	0x25c	; 0x25c <LCD_set_cursor>
				 printf(" %02d",temp_w);
     586:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <temp_w+0x1>
     58a:	8f 93       	push	r24
     58c:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <temp_w>
     590:	8f 93       	push	r24
     592:	8f e7       	ldi	r24, 0x7F	; 127
     594:	91 e0       	ldi	r25, 0x01	; 1
     596:	9f 93       	push	r25
     598:	8f 93       	push	r24
     59a:	0e 94 15 0a 	call	0x142a	; 0x142a <printf>
				 LCD_set_cursor(2,3);
     59e:	63 e0       	ldi	r22, 0x03	; 3
     5a0:	82 e0       	ldi	r24, 0x02	; 2
     5a2:	0e 94 2e 01 	call	0x25c	; 0x25c <LCD_set_cursor>
				 printf("+");
     5a6:	8b e2       	ldi	r24, 0x2B	; 43
     5a8:	90 e0       	ldi	r25, 0x00	; 0
     5aa:	0e 94 2b 0a 	call	0x1456	; 0x1456 <putchar>
				 LCD_set_cursor(6,3);
     5ae:	63 e0       	ldi	r22, 0x03	; 3
     5b0:	86 e0       	ldi	r24, 0x06	; 6
     5b2:	0e 94 2e 01 	call	0x25c	; 0x25c <LCD_set_cursor>
				 printf("-");
     5b6:	8d e2       	ldi	r24, 0x2D	; 45
     5b8:	90 e0       	ldi	r25, 0x00	; 0
     5ba:	0e 94 2b 0a 	call	0x1456	; 0x1456 <putchar>
				 LCD_set_cursor(12,3);
     5be:	63 e0       	ldi	r22, 0x03	; 3
     5c0:	8c e0       	ldi	r24, 0x0C	; 12
     5c2:	0e 94 2e 01 	call	0x25c	; 0x25c <LCD_set_cursor>
				 printf("SET|");
     5c6:	85 e8       	ldi	r24, 0x85	; 133
     5c8:	91 e0       	ldi	r25, 0x01	; 1
     5ca:	9f 93       	push	r25
     5cc:	8f 93       	push	r24
     5ce:	0e 94 15 0a 	call	0x142a	; 0x142a <printf>
				 LCD_set_cursor(16,3);
     5d2:	63 e0       	ldi	r22, 0x03	; 3
     5d4:	80 e1       	ldi	r24, 0x10	; 16
     5d6:	0e 94 2e 01 	call	0x25c	; 0x25c <LCD_set_cursor>
				 printf("|BACK");
     5da:	8a e8       	ldi	r24, 0x8A	; 138
     5dc:	91 e0       	ldi	r25, 0x01	; 1
     5de:	9f 93       	push	r25
     5e0:	8f 93       	push	r24
     5e2:	0e 94 15 0a 	call	0x142a	; 0x142a <printf>
				 if(PINC==B1){
     5e6:	86 b1       	in	r24, 0x06	; 6
     5e8:	0f b6       	in	r0, 0x3f	; 63
     5ea:	f8 94       	cli
     5ec:	de bf       	out	0x3e, r29	; 62
     5ee:	0f be       	out	0x3f, r0	; 63
     5f0:	cd bf       	out	0x3d, r28	; 61
     5f2:	8e 33       	cpi	r24, 0x3E	; 62
     5f4:	91 f4       	brne	.+36     	; 0x61a <__EEPROM_REGION_LENGTH__+0x21a>
					 temp_w++;
     5f6:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <temp_w>
     5fa:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <temp_w+0x1>
     5fe:	01 96       	adiw	r24, 0x01	; 1
     600:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <temp_w+0x1>
     604:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <temp_w>
     608:	ff ef       	ldi	r31, 0xFF	; 255
     60a:	23 ec       	ldi	r18, 0xC3	; 195
     60c:	39 e0       	ldi	r19, 0x09	; 9
     60e:	f1 50       	subi	r31, 0x01	; 1
     610:	20 40       	sbci	r18, 0x00	; 0
     612:	30 40       	sbci	r19, 0x00	; 0
     614:	e1 f7       	brne	.-8      	; 0x60e <__EEPROM_REGION_LENGTH__+0x20e>
     616:	00 c0       	rjmp	.+0      	; 0x618 <__EEPROM_REGION_LENGTH__+0x218>
     618:	00 00       	nop
					 _delay_ms(200);
				 }
				 if(PINC==B2&&temp_w){
     61a:	86 b1       	in	r24, 0x06	; 6
     61c:	8d 33       	cpi	r24, 0x3D	; 61
     61e:	a1 f4       	brne	.+40     	; 0x648 <__EEPROM_REGION_LENGTH__+0x248>
     620:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <temp_w>
     624:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <temp_w+0x1>
     628:	00 97       	sbiw	r24, 0x00	; 0
     62a:	71 f0       	breq	.+28     	; 0x648 <__EEPROM_REGION_LENGTH__+0x248>
					 temp_w--;
     62c:	01 97       	sbiw	r24, 0x01	; 1
     62e:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <temp_w+0x1>
     632:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <temp_w>
     636:	8f ef       	ldi	r24, 0xFF	; 255
     638:	93 ec       	ldi	r25, 0xC3	; 195
     63a:	e9 e0       	ldi	r30, 0x09	; 9
     63c:	81 50       	subi	r24, 0x01	; 1
     63e:	90 40       	sbci	r25, 0x00	; 0
     640:	e0 40       	sbci	r30, 0x00	; 0
     642:	e1 f7       	brne	.-8      	; 0x63c <__EEPROM_REGION_LENGTH__+0x23c>
     644:	00 c0       	rjmp	.+0      	; 0x646 <__EEPROM_REGION_LENGTH__+0x246>
     646:	00 00       	nop
					 _delay_ms(200);
				 }
				 if(PINC==B3){
     648:	86 b1       	in	r24, 0x06	; 6
     64a:	8b 33       	cpi	r24, 0x3B	; 59
     64c:	39 f5       	brne	.+78     	; 0x69c <__EEPROM_REGION_LENGTH__+0x29c>
					 eeprom_write_byte((uint8_t *) 1,temp_w);					//EEPROM WRITE
     64e:	00 e1       	ldi	r16, 0x10	; 16
     650:	11 e0       	ldi	r17, 0x01	; 1
     652:	f8 01       	movw	r30, r16
     654:	60 81       	ld	r22, Z
     656:	81 e0       	ldi	r24, 0x01	; 1
     658:	90 e0       	ldi	r25, 0x00	; 0
     65a:	0e 94 98 0a 	call	0x1530	; 0x1530 <eeprom_write_byte>
					 LCD_clear();
     65e:	0e 94 20 01 	call	0x240	; 0x240 <LCD_clear>
					 LCD_set_cursor(0,0);
     662:	60 e0       	ldi	r22, 0x00	; 0
     664:	80 e0       	ldi	r24, 0x00	; 0
     666:	0e 94 2e 01 	call	0x25c	; 0x25c <LCD_set_cursor>
					 printf("EEPROM WRITE");
     66a:	8c e1       	ldi	r24, 0x1C	; 28
     66c:	91 e0       	ldi	r25, 0x01	; 1
     66e:	9f 93       	push	r25
     670:	8f 93       	push	r24
     672:	0e 94 15 0a 	call	0x142a	; 0x142a <printf>
					 weight=temp_w;
     676:	f8 01       	movw	r30, r16
     678:	80 81       	ld	r24, Z
     67a:	80 93 e5 01 	sts	0x01E5, r24	; 0x8001e5 <weight>
					 w_f=1;
     67e:	81 e0       	ldi	r24, 0x01	; 1
     680:	80 93 e1 01 	sts	0x01E1, r24	; 0x8001e1 <w_f>
     684:	ff ef       	ldi	r31, 0xFF	; 255
     686:	25 ea       	ldi	r18, 0xA5	; 165
     688:	3e e0       	ldi	r19, 0x0E	; 14
     68a:	f1 50       	subi	r31, 0x01	; 1
     68c:	20 40       	sbci	r18, 0x00	; 0
     68e:	30 40       	sbci	r19, 0x00	; 0
     690:	e1 f7       	brne	.-8      	; 0x68a <__EEPROM_REGION_LENGTH__+0x28a>
     692:	00 c0       	rjmp	.+0      	; 0x694 <__EEPROM_REGION_LENGTH__+0x294>
     694:	00 00       	nop
     696:	0f 90       	pop	r0
     698:	0f 90       	pop	r0
     69a:	04 c0       	rjmp	.+8      	; 0x6a4 <__EEPROM_REGION_LENGTH__+0x2a4>
		 printf("Name");
		 
		 if(PINC==B1){
			 LCD_clear();
			 _delay_ms(100);
			 while(PINC!=B4){
     69c:	86 b1       	in	r24, 0x06	; 6
     69e:	87 33       	cpi	r24, 0x37	; 55
     6a0:	09 f0       	breq	.+2      	; 0x6a4 <__EEPROM_REGION_LENGTH__+0x2a4>
     6a2:	63 cf       	rjmp	.-314    	; 0x56a <__EEPROM_REGION_LENGTH__+0x16a>
					 w_f=1;
					 _delay_ms(300);
					 break;
				 }
			 }
			 temp_w=40;
     6a4:	88 e2       	ldi	r24, 0x28	; 40
     6a6:	90 e0       	ldi	r25, 0x00	; 0
     6a8:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <temp_w+0x1>
     6ac:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <temp_w>
			 LCD_clear();
     6b0:	0e 94 20 01 	call	0x240	; 0x240 <LCD_clear>
     6b4:	8f ef       	ldi	r24, 0xFF	; 255
     6b6:	93 ec       	ldi	r25, 0xC3	; 195
     6b8:	e9 e0       	ldi	r30, 0x09	; 9
     6ba:	81 50       	subi	r24, 0x01	; 1
     6bc:	90 40       	sbci	r25, 0x00	; 0
     6be:	e0 40       	sbci	r30, 0x00	; 0
     6c0:	e1 f7       	brne	.-8      	; 0x6ba <__EEPROM_REGION_LENGTH__+0x2ba>
     6c2:	00 c0       	rjmp	.+0      	; 0x6c4 <__EEPROM_REGION_LENGTH__+0x2c4>
     6c4:	00 00       	nop
			 _delay_ms(200);
		 }
		 
		 if(PINC==B3){
     6c6:	86 b1       	in	r24, 0x06	; 6
     6c8:	8b 33       	cpi	r24, 0x3B	; 59
     6ca:	09 f0       	breq	.+2      	; 0x6ce <__EEPROM_REGION_LENGTH__+0x2ce>
     6cc:	fc c0       	rjmp	.+504    	; 0x8c6 <__DATA_REGION_LENGTH__+0xc6>
			 LCD_clear();
     6ce:	0e 94 20 01 	call	0x240	; 0x240 <LCD_clear>
     6d2:	ff ef       	ldi	r31, 0xFF	; 255
     6d4:	21 ee       	ldi	r18, 0xE1	; 225
     6d6:	34 e0       	ldi	r19, 0x04	; 4
     6d8:	f1 50       	subi	r31, 0x01	; 1
     6da:	20 40       	sbci	r18, 0x00	; 0
     6dc:	30 40       	sbci	r19, 0x00	; 0
     6de:	e1 f7       	brne	.-8      	; 0x6d8 <__EEPROM_REGION_LENGTH__+0x2d8>
     6e0:	00 c0       	rjmp	.+0      	; 0x6e2 <__EEPROM_REGION_LENGTH__+0x2e2>
     6e2:	00 00       	nop
     6e4:	c1 2c       	mov	r12, r1
     6e6:	d1 2c       	mov	r13, r1
     6e8:	d6 c0       	rjmp	.+428    	; 0x896 <__DATA_REGION_LENGTH__+0x96>
			 _delay_ms(100);
			 while(PINC!=B4){
				  LCD_set_cursor(0,0);
     6ea:	60 e0       	ldi	r22, 0x00	; 0
     6ec:	80 e0       	ldi	r24, 0x00	; 0
     6ee:	0e 94 2e 01 	call	0x25c	; 0x25c <LCD_set_cursor>
				  printf("Set Your Name:");
     6f2:	80 e9       	ldi	r24, 0x90	; 144
     6f4:	91 e0       	ldi	r25, 0x01	; 1
     6f6:	9f 93       	push	r25
     6f8:	8f 93       	push	r24
     6fa:	0e 94 15 0a 	call	0x142a	; 0x142a <printf>
				  LCD_set_cursor(0,1);
     6fe:	61 e0       	ldi	r22, 0x01	; 1
     700:	80 e0       	ldi	r24, 0x00	; 0
     702:	0e 94 2e 01 	call	0x25c	; 0x25c <LCD_set_cursor>
				  printf("%d. Letter: %c",count_l+1,temp_n);
     706:	86 01       	movw	r16, r12
     708:	0f 5f       	subi	r16, 0xFF	; 255
     70a:	1f 4f       	sbci	r17, 0xFF	; 255
     70c:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <temp_n+0x1>
     710:	8f 93       	push	r24
     712:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <temp_n>
     716:	8f 93       	push	r24
     718:	1f 93       	push	r17
     71a:	0f 93       	push	r16
     71c:	8f e9       	ldi	r24, 0x9F	; 159
     71e:	91 e0       	ldi	r25, 0x01	; 1
     720:	9f 93       	push	r25
     722:	8f 93       	push	r24
     724:	0e 94 15 0a 	call	0x142a	; 0x142a <printf>
				  LCD_set_cursor(2,3);
     728:	63 e0       	ldi	r22, 0x03	; 3
     72a:	82 e0       	ldi	r24, 0x02	; 2
     72c:	0e 94 2e 01 	call	0x25c	; 0x25c <LCD_set_cursor>
				  printf("+");
     730:	8b e2       	ldi	r24, 0x2B	; 43
     732:	90 e0       	ldi	r25, 0x00	; 0
     734:	0e 94 2b 0a 	call	0x1456	; 0x1456 <putchar>
				  LCD_set_cursor(6,3);
     738:	63 e0       	ldi	r22, 0x03	; 3
     73a:	86 e0       	ldi	r24, 0x06	; 6
     73c:	0e 94 2e 01 	call	0x25c	; 0x25c <LCD_set_cursor>
				  printf("-");
     740:	8d e2       	ldi	r24, 0x2D	; 45
     742:	90 e0       	ldi	r25, 0x00	; 0
     744:	0e 94 2b 0a 	call	0x1456	; 0x1456 <putchar>
				  LCD_set_cursor(12,3);
     748:	63 e0       	ldi	r22, 0x03	; 3
     74a:	8c e0       	ldi	r24, 0x0C	; 12
     74c:	0e 94 2e 01 	call	0x25c	; 0x25c <LCD_set_cursor>
				  printf("SET|");
     750:	85 e8       	ldi	r24, 0x85	; 133
     752:	91 e0       	ldi	r25, 0x01	; 1
     754:	9f 93       	push	r25
     756:	8f 93       	push	r24
     758:	0e 94 15 0a 	call	0x142a	; 0x142a <printf>
				  LCD_set_cursor(16,3);
     75c:	63 e0       	ldi	r22, 0x03	; 3
     75e:	80 e1       	ldi	r24, 0x10	; 16
     760:	0e 94 2e 01 	call	0x25c	; 0x25c <LCD_set_cursor>
				  printf("BACK");
     764:	8b e8       	ldi	r24, 0x8B	; 139
     766:	91 e0       	ldi	r25, 0x01	; 1
     768:	9f 93       	push	r25
     76a:	8f 93       	push	r24
     76c:	0e 94 15 0a 	call	0x142a	; 0x142a <printf>
				  
				  if(PINC==B1){
     770:	86 b1       	in	r24, 0x06	; 6
     772:	0f b6       	in	r0, 0x3f	; 63
     774:	f8 94       	cli
     776:	de bf       	out	0x3e, r29	; 62
     778:	0f be       	out	0x3f, r0	; 63
     77a:	cd bf       	out	0x3d, r28	; 61
     77c:	8e 33       	cpi	r24, 0x3E	; 62
     77e:	e1 f4       	brne	.+56     	; 0x7b8 <__EEPROM_REGION_LENGTH__+0x3b8>
					  if(temp_n==90) temp_n=65;
     780:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <temp_n>
     784:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <temp_n+0x1>
     788:	8a 35       	cpi	r24, 0x5A	; 90
     78a:	91 05       	cpc	r25, r1
     78c:	39 f4       	brne	.+14     	; 0x79c <__EEPROM_REGION_LENGTH__+0x39c>
     78e:	81 e4       	ldi	r24, 0x41	; 65
     790:	90 e0       	ldi	r25, 0x00	; 0
     792:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <temp_n+0x1>
     796:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <temp_n>
     79a:	05 c0       	rjmp	.+10     	; 0x7a6 <__EEPROM_REGION_LENGTH__+0x3a6>
					  else temp_n++;
     79c:	01 96       	adiw	r24, 0x01	; 1
     79e:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <temp_n+0x1>
     7a2:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <temp_n>
     7a6:	ff ef       	ldi	r31, 0xFF	; 255
     7a8:	23 ec       	ldi	r18, 0xC3	; 195
     7aa:	39 e0       	ldi	r19, 0x09	; 9
     7ac:	f1 50       	subi	r31, 0x01	; 1
     7ae:	20 40       	sbci	r18, 0x00	; 0
     7b0:	30 40       	sbci	r19, 0x00	; 0
     7b2:	e1 f7       	brne	.-8      	; 0x7ac <__EEPROM_REGION_LENGTH__+0x3ac>
     7b4:	00 c0       	rjmp	.+0      	; 0x7b6 <__EEPROM_REGION_LENGTH__+0x3b6>
     7b6:	00 00       	nop
					  _delay_ms(200);
				  }
				  if(PINC==B2&&temp_n){
     7b8:	86 b1       	in	r24, 0x06	; 6
     7ba:	8d 33       	cpi	r24, 0x3D	; 61
     7bc:	f1 f4       	brne	.+60     	; 0x7fa <__EEPROM_REGION_LENGTH__+0x3fa>
     7be:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <temp_n>
     7c2:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <temp_n+0x1>
     7c6:	00 97       	sbiw	r24, 0x00	; 0
     7c8:	c1 f0       	breq	.+48     	; 0x7fa <__EEPROM_REGION_LENGTH__+0x3fa>
					  if(temp_n==65) temp_n=90;
     7ca:	81 34       	cpi	r24, 0x41	; 65
     7cc:	91 05       	cpc	r25, r1
     7ce:	39 f4       	brne	.+14     	; 0x7de <__EEPROM_REGION_LENGTH__+0x3de>
     7d0:	8a e5       	ldi	r24, 0x5A	; 90
     7d2:	90 e0       	ldi	r25, 0x00	; 0
     7d4:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <temp_n+0x1>
     7d8:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <temp_n>
     7dc:	05 c0       	rjmp	.+10     	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
					  else temp_n--;
     7de:	01 97       	sbiw	r24, 0x01	; 1
     7e0:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <temp_n+0x1>
     7e4:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <temp_n>
     7e8:	8f ef       	ldi	r24, 0xFF	; 255
     7ea:	93 ec       	ldi	r25, 0xC3	; 195
     7ec:	e9 e0       	ldi	r30, 0x09	; 9
     7ee:	81 50       	subi	r24, 0x01	; 1
     7f0:	90 40       	sbci	r25, 0x00	; 0
     7f2:	e0 40       	sbci	r30, 0x00	; 0
     7f4:	e1 f7       	brne	.-8      	; 0x7ee <__EEPROM_REGION_LENGTH__+0x3ee>
     7f6:	00 c0       	rjmp	.+0      	; 0x7f8 <__EEPROM_REGION_LENGTH__+0x3f8>
     7f8:	00 00       	nop
					  _delay_ms(200);
				  }
				  
				  if(PINC==B3){
     7fa:	86 b1       	in	r24, 0x06	; 6
     7fc:	8b 33       	cpi	r24, 0x3B	; 59
     7fe:	09 f0       	breq	.+2      	; 0x802 <__DATA_REGION_LENGTH__+0x2>
     800:	4a c0       	rjmp	.+148    	; 0x896 <__DATA_REGION_LENGTH__+0x96>
					  if(!count_l) name_array[count_l]=temp_n;		//Capital letter for 1. 
     802:	c1 14       	cp	r12, r1
     804:	d1 04       	cpc	r13, r1
     806:	81 f4       	brne	.+32     	; 0x828 <__DATA_REGION_LENGTH__+0x28>
     808:	f6 01       	movw	r30, r12
     80a:	ee 0f       	add	r30, r30
     80c:	ff 1f       	adc	r31, r31
     80e:	21 e0       	ldi	r18, 0x01	; 1
     810:	30 e0       	ldi	r19, 0x00	; 0
     812:	2c 0f       	add	r18, r28
     814:	3d 1f       	adc	r19, r29
     816:	e2 0f       	add	r30, r18
     818:	f3 1f       	adc	r31, r19
     81a:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <temp_n>
     81e:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <temp_n+0x1>
     822:	91 83       	std	Z+1, r25	; 0x01
     824:	80 83       	st	Z, r24
     826:	10 c0       	rjmp	.+32     	; 0x848 <__DATA_REGION_LENGTH__+0x48>
					  else  name_array[count_l]=temp_n+32;			//lowercase for rest
     828:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <temp_n>
     82c:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <temp_n+0x1>
     830:	80 96       	adiw	r24, 0x20	; 32
     832:	f6 01       	movw	r30, r12
     834:	ee 0f       	add	r30, r30
     836:	ff 1f       	adc	r31, r31
     838:	21 e0       	ldi	r18, 0x01	; 1
     83a:	30 e0       	ldi	r19, 0x00	; 0
     83c:	2c 0f       	add	r18, r28
     83e:	3d 1f       	adc	r19, r29
     840:	e2 0f       	add	r30, r18
     842:	f3 1f       	adc	r31, r19
     844:	91 83       	std	Z+1, r25	; 0x01
     846:	80 83       	st	Z, r24
					  LCD_set_cursor(0,2);
     848:	62 e0       	ldi	r22, 0x02	; 2
     84a:	80 e0       	ldi	r24, 0x00	; 0
     84c:	0e 94 2e 01 	call	0x25c	; 0x25c <LCD_set_cursor>
					  printf("%d",name_array[count_l]);
     850:	cc 0c       	add	r12, r12
     852:	dd 1c       	adc	r13, r13
     854:	e1 e0       	ldi	r30, 0x01	; 1
     856:	f0 e0       	ldi	r31, 0x00	; 0
     858:	ec 0f       	add	r30, r28
     85a:	fd 1f       	adc	r31, r29
     85c:	ec 0d       	add	r30, r12
     85e:	fd 1d       	adc	r31, r13
     860:	81 81       	ldd	r24, Z+1	; 0x01
     862:	8f 93       	push	r24
     864:	80 81       	ld	r24, Z
     866:	8f 93       	push	r24
     868:	8e ea       	ldi	r24, 0xAE	; 174
     86a:	91 e0       	ldi	r25, 0x01	; 1
     86c:	9f 93       	push	r25
     86e:	8f 93       	push	r24
     870:	0e 94 15 0a 	call	0x142a	; 0x142a <printf>
					  count_l++; 
					  if(count_l==5) break;
     874:	0f 90       	pop	r0
     876:	0f 90       	pop	r0
     878:	0f 90       	pop	r0
     87a:	0f 90       	pop	r0
     87c:	05 30       	cpi	r16, 0x05	; 5
     87e:	11 05       	cpc	r17, r1
     880:	71 f0       	breq	.+28     	; 0x89e <__DATA_REGION_LENGTH__+0x9e>
     882:	3f ef       	ldi	r19, 0xFF	; 255
     884:	84 e3       	ldi	r24, 0x34	; 52
     886:	9c e0       	ldi	r25, 0x0C	; 12
     888:	31 50       	subi	r19, 0x01	; 1
     88a:	80 40       	sbci	r24, 0x00	; 0
     88c:	90 40       	sbci	r25, 0x00	; 0
     88e:	e1 f7       	brne	.-8      	; 0x888 <__DATA_REGION_LENGTH__+0x88>
     890:	00 c0       	rjmp	.+0      	; 0x892 <__DATA_REGION_LENGTH__+0x92>
     892:	00 00       	nop
				  if(PINC==B3){
					  if(!count_l) name_array[count_l]=temp_n;		//Capital letter for 1. 
					  else  name_array[count_l]=temp_n+32;			//lowercase for rest
					  LCD_set_cursor(0,2);
					  printf("%d",name_array[count_l]);
					  count_l++; 
     894:	68 01       	movw	r12, r16
		 }
		 
		 if(PINC==B3){
			 LCD_clear();
			 _delay_ms(100);
			 while(PINC!=B4){
     896:	86 b1       	in	r24, 0x06	; 6
     898:	87 33       	cpi	r24, 0x37	; 55
     89a:	09 f0       	breq	.+2      	; 0x89e <__DATA_REGION_LENGTH__+0x9e>
     89c:	26 cf       	rjmp	.-436    	; 0x6ea <__EEPROM_REGION_LENGTH__+0x2ea>
					  _delay_ms(250);
					
				  }
				}
			
			 name_f=1;
     89e:	81 e0       	ldi	r24, 0x01	; 1
     8a0:	80 93 e2 01 	sts	0x01E2, r24	; 0x8001e2 <name_f>
			 count_l=0;
			 temp_n=65;
     8a4:	81 e4       	ldi	r24, 0x41	; 65
     8a6:	90 e0       	ldi	r25, 0x00	; 0
     8a8:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <temp_n+0x1>
     8ac:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <temp_n>
			 LCD_clear();
     8b0:	0e 94 20 01 	call	0x240	; 0x240 <LCD_clear>
     8b4:	ef ef       	ldi	r30, 0xFF	; 255
     8b6:	f3 ec       	ldi	r31, 0xC3	; 195
     8b8:	29 e0       	ldi	r18, 0x09	; 9
     8ba:	e1 50       	subi	r30, 0x01	; 1
     8bc:	f0 40       	sbci	r31, 0x00	; 0
     8be:	20 40       	sbci	r18, 0x00	; 0
     8c0:	e1 f7       	brne	.-8      	; 0x8ba <__DATA_REGION_LENGTH__+0xba>
     8c2:	00 c0       	rjmp	.+0      	; 0x8c4 <__DATA_REGION_LENGTH__+0xc4>
     8c4:	00 00       	nop
	return 0;
}

void intro_screen(){
	 int name_array[5], count_l=0,written=0;			//Array for names, letter count, if name was written
	 while (PINC!=B4)
     8c6:	86 b1       	in	r24, 0x06	; 6
     8c8:	87 33       	cpi	r24, 0x37	; 55
     8ca:	09 f0       	breq	.+2      	; 0x8ce <__DATA_REGION_LENGTH__+0xce>
     8cc:	89 cd       	rjmp	.-1262   	; 0x3e0 <intro_screen+0x26>
			 LCD_clear();
			 _delay_ms(200); 
		 }
		 
	 } 
	 LCD_clear();
     8ce:	0e 94 20 01 	call	0x240	; 0x240 <LCD_clear>
	 if(!w_f){
     8d2:	80 91 e1 01 	lds	r24, 0x01E1	; 0x8001e1 <w_f>
     8d6:	81 11       	cpse	r24, r1
     8d8:	16 c0       	rjmp	.+44     	; 0x906 <__stack+0x7>
		LCD_set_cursor(0,2);
     8da:	62 e0       	ldi	r22, 0x02	; 2
     8dc:	0e 94 2e 01 	call	0x25c	; 0x25c <LCD_set_cursor>
		printf("SELECT YOUR WEIGHT!");
     8e0:	81 eb       	ldi	r24, 0xB1	; 177
     8e2:	91 e0       	ldi	r25, 0x01	; 1
     8e4:	9f 93       	push	r25
     8e6:	8f 93       	push	r24
     8e8:	0e 94 15 0a 	call	0x142a	; 0x142a <printf>
     8ec:	3f ef       	ldi	r19, 0xFF	; 255
     8ee:	83 ed       	ldi	r24, 0xD3	; 211
     8f0:	90 e3       	ldi	r25, 0x30	; 48
     8f2:	31 50       	subi	r19, 0x01	; 1
     8f4:	80 40       	sbci	r24, 0x00	; 0
     8f6:	90 40       	sbci	r25, 0x00	; 0
     8f8:	e1 f7       	brne	.-8      	; 0x8f2 <__DATA_REGION_LENGTH__+0xf2>
     8fa:	00 c0       	rjmp	.+0      	; 0x8fc <__DATA_REGION_LENGTH__+0xfc>
     8fc:	00 00       	nop
		_delay_ms(1000);
		LCD_clear();
     8fe:	0e 94 20 01 	call	0x240	; 0x240 <LCD_clear>
     902:	0f 90       	pop	r0
     904:	0f 90       	pop	r0
		//intro_screen();						What to do here>>>
	 }
	 eeprom_write_byte((uint8_t *)0,1);
     906:	61 e0       	ldi	r22, 0x01	; 1
     908:	80 e0       	ldi	r24, 0x00	; 0
     90a:	90 e0       	ldi	r25, 0x00	; 0
     90c:	0e 94 98 0a 	call	0x1530	; 0x1530 <eeprom_write_byte>
	
}
     910:	2a 96       	adiw	r28, 0x0a	; 10
     912:	0f b6       	in	r0, 0x3f	; 63
     914:	f8 94       	cli
     916:	de bf       	out	0x3e, r29	; 62
     918:	0f be       	out	0x3f, r0	; 63
     91a:	cd bf       	out	0x3d, r28	; 61
     91c:	df 91       	pop	r29
     91e:	cf 91       	pop	r28
     920:	1f 91       	pop	r17
     922:	0f 91       	pop	r16
     924:	ff 90       	pop	r15
     926:	ef 90       	pop	r14
     928:	df 90       	pop	r13
     92a:	cf 90       	pop	r12
     92c:	08 95       	ret

0000092e <main>:
unsigned int name_addr=3,weight_addr=1,height_addr=2,temp_w=40,temp_n=65;							//addresses
void intro_screen(void);
void print_name(void);
void read_name(void);
int main(void)
{
     92e:	cf 93       	push	r28
     930:	df 93       	push	r29
     932:	cd b7       	in	r28, 0x3d	; 61
     934:	de b7       	in	r29, 0x3e	; 62
     936:	2a 97       	sbiw	r28, 0x0a	; 10
     938:	0f b6       	in	r0, 0x3f	; 63
     93a:	f8 94       	cli
     93c:	de bf       	out	0x3e, r29	; 62
     93e:	0f be       	out	0x3f, r0	; 63
     940:	cd bf       	out	0x3d, r28	; 61
	//uart_init();
	//io_redirect();
	DDRD=0xFF;
     942:	8f ef       	ldi	r24, 0xFF	; 255
     944:	8a b9       	out	0x0a, r24	; 10
	PORTD=0x00;
     946:	1b b8       	out	0x0b, r1	; 11
	DDRC=0xF0;
     948:	80 ef       	ldi	r24, 0xF0	; 240
     94a:	87 b9       	out	0x07, r24	; 7
	PORTC=0x3F;
     94c:	8f e3       	ldi	r24, 0x3F	; 63
     94e:	88 b9       	out	0x08, r24	; 8
	i2c_init();
     950:	0e 94 f0 04 	call	0x9e0	; 0x9e0 <i2c_init>
	LCD_init();
     954:	0e 94 75 01 	call	0x2ea	; 0x2ea <LCD_init>
	intro_screen();
     958:	0e 94 dd 01 	call	0x3ba	; 0x3ba <intro_screen>
	int name_array[5];
	
	weight=eeprom_read_byte((uint8_t *) weight_addr);
     95c:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <weight_addr>
     960:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <weight_addr+0x1>
     964:	0e 94 90 0a 	call	0x1520	; 0x1520 <eeprom_read_byte>
     968:	80 93 e5 01 	sts	0x01E5, r24	; 0x8001e5 <weight>
	name= eeprom_read_byte((uint8_t *) 3);
     96c:	83 e0       	ldi	r24, 0x03	; 3
     96e:	90 e0       	ldi	r25, 0x00	; 0
     970:	0e 94 90 0a 	call	0x1520	; 0x1520 <eeprom_read_byte>
     974:	80 93 e3 01 	sts	0x01E3, r24	; 0x8001e3 <name>
	
	while(1){
		LCD_set_cursor(0,0);
     978:	60 e0       	ldi	r22, 0x00	; 0
     97a:	80 e0       	ldi	r24, 0x00	; 0
     97c:	0e 94 2e 01 	call	0x25c	; 0x25c <LCD_set_cursor>
		printf("Hello ");
     980:	85 ec       	ldi	r24, 0xC5	; 197
     982:	91 e0       	ldi	r25, 0x01	; 1
     984:	9f 93       	push	r25
     986:	8f 93       	push	r24
     988:	0e 94 15 0a 	call	0x142a	; 0x142a <printf>
		for(int i=0;i<5;i++){
     98c:	0f 90       	pop	r0
     98e:	0f 90       	pop	r0
     990:	00 e0       	ldi	r16, 0x00	; 0
     992:	10 e0       	ldi	r17, 0x00	; 0
     994:	0f c0       	rjmp	.+30     	; 0x9b4 <main+0x86>
			printf("%c",name_array[i]);
     996:	f8 01       	movw	r30, r16
     998:	ee 0f       	add	r30, r30
     99a:	ff 1f       	adc	r31, r31
     99c:	81 e0       	ldi	r24, 0x01	; 1
     99e:	90 e0       	ldi	r25, 0x00	; 0
     9a0:	8c 0f       	add	r24, r28
     9a2:	9d 1f       	adc	r25, r29
     9a4:	e8 0f       	add	r30, r24
     9a6:	f9 1f       	adc	r31, r25
     9a8:	80 81       	ld	r24, Z
     9aa:	91 81       	ldd	r25, Z+1	; 0x01
     9ac:	0e 94 2b 0a 	call	0x1456	; 0x1456 <putchar>
	name= eeprom_read_byte((uint8_t *) 3);
	
	while(1){
		LCD_set_cursor(0,0);
		printf("Hello ");
		for(int i=0;i<5;i++){
     9b0:	0f 5f       	subi	r16, 0xFF	; 255
     9b2:	1f 4f       	sbci	r17, 0xFF	; 255
     9b4:	05 30       	cpi	r16, 0x05	; 5
     9b6:	11 05       	cpc	r17, r1
     9b8:	74 f3       	brlt	.-36     	; 0x996 <main+0x68>
			printf("%c",name_array[i]);
		}
		LCD_set_cursor(0,1);
     9ba:	61 e0       	ldi	r22, 0x01	; 1
     9bc:	80 e0       	ldi	r24, 0x00	; 0
     9be:	0e 94 2e 01 	call	0x25c	; 0x25c <LCD_set_cursor>
		printf("You weigh: %dkg",weight);
     9c2:	80 91 e5 01 	lds	r24, 0x01E5	; 0x8001e5 <weight>
     9c6:	1f 92       	push	r1
     9c8:	8f 93       	push	r24
     9ca:	8c ec       	ldi	r24, 0xCC	; 204
     9cc:	91 e0       	ldi	r25, 0x01	; 1
     9ce:	9f 93       	push	r25
     9d0:	8f 93       	push	r24
     9d2:	0e 94 15 0a 	call	0x142a	; 0x142a <printf>
	}
     9d6:	0f 90       	pop	r0
     9d8:	0f 90       	pop	r0
     9da:	0f 90       	pop	r0
     9dc:	0f 90       	pop	r0
     9de:	cc cf       	rjmp	.-104    	; 0x978 <main+0x4a>

000009e0 <i2c_init>:
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );

}/* i2c_rep_start */
     9e0:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
     9e4:	88 e4       	ldi	r24, 0x48	; 72
     9e6:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
     9ea:	08 95       	ret

000009ec <i2c_start_wait>:
     9ec:	94 ea       	ldi	r25, 0xA4	; 164
     9ee:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     9f2:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     9f6:	99 23       	and	r25, r25
     9f8:	e4 f7       	brge	.-8      	; 0x9f2 <i2c_start_wait+0x6>
     9fa:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
     9fe:	98 7f       	andi	r25, 0xF8	; 248
     a00:	98 30       	cpi	r25, 0x08	; 8
     a02:	11 f0       	breq	.+4      	; 0xa08 <i2c_start_wait+0x1c>
     a04:	90 31       	cpi	r25, 0x10	; 16
     a06:	91 f7       	brne	.-28     	; 0x9ec <i2c_start_wait>
     a08:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
     a0c:	94 e8       	ldi	r25, 0x84	; 132
     a0e:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     a12:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     a16:	99 23       	and	r25, r25
     a18:	e4 f7       	brge	.-8      	; 0xa12 <i2c_start_wait+0x26>
     a1a:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
     a1e:	98 7f       	andi	r25, 0xF8	; 248
     a20:	90 32       	cpi	r25, 0x20	; 32
     a22:	11 f0       	breq	.+4      	; 0xa28 <i2c_start_wait+0x3c>
     a24:	98 35       	cpi	r25, 0x58	; 88
     a26:	41 f4       	brne	.+16     	; 0xa38 <i2c_start_wait+0x4c>
     a28:	94 e9       	ldi	r25, 0x94	; 148
     a2a:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     a2e:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     a32:	94 fd       	sbrc	r25, 4
     a34:	fc cf       	rjmp	.-8      	; 0xa2e <i2c_start_wait+0x42>
     a36:	da cf       	rjmp	.-76     	; 0x9ec <i2c_start_wait>
     a38:	08 95       	ret

00000a3a <i2c_stop>:
 Terminates the data transfer and releases the I2C bus
*************************************************************************/
void i2c_stop(void)
{
    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     a3a:	84 e9       	ldi	r24, 0x94	; 148
     a3c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	
	// wait until stop condition is executed and bus released
	while(TWCR & (1<<TWSTO));
     a40:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     a44:	84 fd       	sbrc	r24, 4
     a46:	fc cf       	rjmp	.-8      	; 0xa40 <i2c_stop+0x6>

}/* i2c_stop */
     a48:	08 95       	ret

00000a4a <i2c_write>:
unsigned char i2c_write( unsigned char data )
{	
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
     a4a:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
	TWCR = (1<<TWINT) | (1<<TWEN);
     a4e:	84 e8       	ldi	r24, 0x84	; 132
     a50:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
     a54:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     a58:	88 23       	and	r24, r24
     a5a:	e4 f7       	brge	.-8      	; 0xa54 <i2c_write+0xa>

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
     a5c:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
     a60:	88 7f       	andi	r24, 0xF8	; 248
	if( twst != TW_MT_DATA_ACK) return 1;
     a62:	88 32       	cpi	r24, 0x28	; 40
     a64:	11 f0       	breq	.+4      	; 0xa6a <i2c_write+0x20>
     a66:	81 e0       	ldi	r24, 0x01	; 1
     a68:	08 95       	ret
	return 0;
     a6a:	80 e0       	ldi	r24, 0x00	; 0

}/* i2c_write */
     a6c:	08 95       	ret

00000a6e <vfprintf>:
     a6e:	a0 e1       	ldi	r26, 0x10	; 16
     a70:	b0 e0       	ldi	r27, 0x00	; 0
     a72:	ed e3       	ldi	r30, 0x3D	; 61
     a74:	f5 e0       	ldi	r31, 0x05	; 5
     a76:	0c 94 b4 08 	jmp	0x1168	; 0x1168 <__prologue_saves__>
     a7a:	7c 01       	movw	r14, r24
     a7c:	1b 01       	movw	r2, r22
     a7e:	6a 01       	movw	r12, r20
     a80:	fc 01       	movw	r30, r24
     a82:	17 82       	std	Z+7, r1	; 0x07
     a84:	16 82       	std	Z+6, r1	; 0x06
     a86:	83 81       	ldd	r24, Z+3	; 0x03
     a88:	81 ff       	sbrs	r24, 1
     a8a:	44 c3       	rjmp	.+1672   	; 0x1114 <vfprintf+0x6a6>
     a8c:	9e 01       	movw	r18, r28
     a8e:	2f 5f       	subi	r18, 0xFF	; 255
     a90:	3f 4f       	sbci	r19, 0xFF	; 255
     a92:	39 01       	movw	r6, r18
     a94:	f7 01       	movw	r30, r14
     a96:	93 81       	ldd	r25, Z+3	; 0x03
     a98:	f1 01       	movw	r30, r2
     a9a:	93 fd       	sbrc	r25, 3
     a9c:	85 91       	lpm	r24, Z+
     a9e:	93 ff       	sbrs	r25, 3
     aa0:	81 91       	ld	r24, Z+
     aa2:	1f 01       	movw	r2, r30
     aa4:	88 23       	and	r24, r24
     aa6:	09 f4       	brne	.+2      	; 0xaaa <vfprintf+0x3c>
     aa8:	31 c3       	rjmp	.+1634   	; 0x110c <vfprintf+0x69e>
     aaa:	85 32       	cpi	r24, 0x25	; 37
     aac:	39 f4       	brne	.+14     	; 0xabc <vfprintf+0x4e>
     aae:	93 fd       	sbrc	r25, 3
     ab0:	85 91       	lpm	r24, Z+
     ab2:	93 ff       	sbrs	r25, 3
     ab4:	81 91       	ld	r24, Z+
     ab6:	1f 01       	movw	r2, r30
     ab8:	85 32       	cpi	r24, 0x25	; 37
     aba:	39 f4       	brne	.+14     	; 0xaca <vfprintf+0x5c>
     abc:	b7 01       	movw	r22, r14
     abe:	90 e0       	ldi	r25, 0x00	; 0
     ac0:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <fputc>
     ac4:	56 01       	movw	r10, r12
     ac6:	65 01       	movw	r12, r10
     ac8:	e5 cf       	rjmp	.-54     	; 0xa94 <vfprintf+0x26>
     aca:	10 e0       	ldi	r17, 0x00	; 0
     acc:	51 2c       	mov	r5, r1
     ace:	91 2c       	mov	r9, r1
     ad0:	ff e1       	ldi	r31, 0x1F	; 31
     ad2:	f9 15       	cp	r31, r9
     ad4:	d8 f0       	brcs	.+54     	; 0xb0c <vfprintf+0x9e>
     ad6:	8b 32       	cpi	r24, 0x2B	; 43
     ad8:	79 f0       	breq	.+30     	; 0xaf8 <vfprintf+0x8a>
     ada:	38 f4       	brcc	.+14     	; 0xaea <vfprintf+0x7c>
     adc:	80 32       	cpi	r24, 0x20	; 32
     ade:	79 f0       	breq	.+30     	; 0xafe <vfprintf+0x90>
     ae0:	83 32       	cpi	r24, 0x23	; 35
     ae2:	a1 f4       	brne	.+40     	; 0xb0c <vfprintf+0x9e>
     ae4:	f9 2d       	mov	r31, r9
     ae6:	f0 61       	ori	r31, 0x10	; 16
     ae8:	2e c0       	rjmp	.+92     	; 0xb46 <vfprintf+0xd8>
     aea:	8d 32       	cpi	r24, 0x2D	; 45
     aec:	61 f0       	breq	.+24     	; 0xb06 <vfprintf+0x98>
     aee:	80 33       	cpi	r24, 0x30	; 48
     af0:	69 f4       	brne	.+26     	; 0xb0c <vfprintf+0x9e>
     af2:	29 2d       	mov	r18, r9
     af4:	21 60       	ori	r18, 0x01	; 1
     af6:	2d c0       	rjmp	.+90     	; 0xb52 <vfprintf+0xe4>
     af8:	39 2d       	mov	r19, r9
     afa:	32 60       	ori	r19, 0x02	; 2
     afc:	93 2e       	mov	r9, r19
     afe:	89 2d       	mov	r24, r9
     b00:	84 60       	ori	r24, 0x04	; 4
     b02:	98 2e       	mov	r9, r24
     b04:	2a c0       	rjmp	.+84     	; 0xb5a <vfprintf+0xec>
     b06:	e9 2d       	mov	r30, r9
     b08:	e8 60       	ori	r30, 0x08	; 8
     b0a:	15 c0       	rjmp	.+42     	; 0xb36 <vfprintf+0xc8>
     b0c:	97 fc       	sbrc	r9, 7
     b0e:	2d c0       	rjmp	.+90     	; 0xb6a <vfprintf+0xfc>
     b10:	20 ed       	ldi	r18, 0xD0	; 208
     b12:	28 0f       	add	r18, r24
     b14:	2a 30       	cpi	r18, 0x0A	; 10
     b16:	88 f4       	brcc	.+34     	; 0xb3a <vfprintf+0xcc>
     b18:	96 fe       	sbrs	r9, 6
     b1a:	06 c0       	rjmp	.+12     	; 0xb28 <vfprintf+0xba>
     b1c:	3a e0       	ldi	r19, 0x0A	; 10
     b1e:	13 9f       	mul	r17, r19
     b20:	20 0d       	add	r18, r0
     b22:	11 24       	eor	r1, r1
     b24:	12 2f       	mov	r17, r18
     b26:	19 c0       	rjmp	.+50     	; 0xb5a <vfprintf+0xec>
     b28:	8a e0       	ldi	r24, 0x0A	; 10
     b2a:	58 9e       	mul	r5, r24
     b2c:	20 0d       	add	r18, r0
     b2e:	11 24       	eor	r1, r1
     b30:	52 2e       	mov	r5, r18
     b32:	e9 2d       	mov	r30, r9
     b34:	e0 62       	ori	r30, 0x20	; 32
     b36:	9e 2e       	mov	r9, r30
     b38:	10 c0       	rjmp	.+32     	; 0xb5a <vfprintf+0xec>
     b3a:	8e 32       	cpi	r24, 0x2E	; 46
     b3c:	31 f4       	brne	.+12     	; 0xb4a <vfprintf+0xdc>
     b3e:	96 fc       	sbrc	r9, 6
     b40:	e5 c2       	rjmp	.+1482   	; 0x110c <vfprintf+0x69e>
     b42:	f9 2d       	mov	r31, r9
     b44:	f0 64       	ori	r31, 0x40	; 64
     b46:	9f 2e       	mov	r9, r31
     b48:	08 c0       	rjmp	.+16     	; 0xb5a <vfprintf+0xec>
     b4a:	8c 36       	cpi	r24, 0x6C	; 108
     b4c:	21 f4       	brne	.+8      	; 0xb56 <vfprintf+0xe8>
     b4e:	29 2d       	mov	r18, r9
     b50:	20 68       	ori	r18, 0x80	; 128
     b52:	92 2e       	mov	r9, r18
     b54:	02 c0       	rjmp	.+4      	; 0xb5a <vfprintf+0xec>
     b56:	88 36       	cpi	r24, 0x68	; 104
     b58:	41 f4       	brne	.+16     	; 0xb6a <vfprintf+0xfc>
     b5a:	f1 01       	movw	r30, r2
     b5c:	93 fd       	sbrc	r25, 3
     b5e:	85 91       	lpm	r24, Z+
     b60:	93 ff       	sbrs	r25, 3
     b62:	81 91       	ld	r24, Z+
     b64:	1f 01       	movw	r2, r30
     b66:	81 11       	cpse	r24, r1
     b68:	b3 cf       	rjmp	.-154    	; 0xad0 <vfprintf+0x62>
     b6a:	9b eb       	ldi	r25, 0xBB	; 187
     b6c:	98 0f       	add	r25, r24
     b6e:	93 30       	cpi	r25, 0x03	; 3
     b70:	20 f4       	brcc	.+8      	; 0xb7a <vfprintf+0x10c>
     b72:	99 2d       	mov	r25, r9
     b74:	90 61       	ori	r25, 0x10	; 16
     b76:	80 5e       	subi	r24, 0xE0	; 224
     b78:	07 c0       	rjmp	.+14     	; 0xb88 <vfprintf+0x11a>
     b7a:	9b e9       	ldi	r25, 0x9B	; 155
     b7c:	98 0f       	add	r25, r24
     b7e:	93 30       	cpi	r25, 0x03	; 3
     b80:	08 f0       	brcs	.+2      	; 0xb84 <vfprintf+0x116>
     b82:	66 c1       	rjmp	.+716    	; 0xe50 <vfprintf+0x3e2>
     b84:	99 2d       	mov	r25, r9
     b86:	9f 7e       	andi	r25, 0xEF	; 239
     b88:	96 ff       	sbrs	r25, 6
     b8a:	16 e0       	ldi	r17, 0x06	; 6
     b8c:	9f 73       	andi	r25, 0x3F	; 63
     b8e:	99 2e       	mov	r9, r25
     b90:	85 36       	cpi	r24, 0x65	; 101
     b92:	19 f4       	brne	.+6      	; 0xb9a <vfprintf+0x12c>
     b94:	90 64       	ori	r25, 0x40	; 64
     b96:	99 2e       	mov	r9, r25
     b98:	08 c0       	rjmp	.+16     	; 0xbaa <vfprintf+0x13c>
     b9a:	86 36       	cpi	r24, 0x66	; 102
     b9c:	21 f4       	brne	.+8      	; 0xba6 <vfprintf+0x138>
     b9e:	39 2f       	mov	r19, r25
     ba0:	30 68       	ori	r19, 0x80	; 128
     ba2:	93 2e       	mov	r9, r19
     ba4:	02 c0       	rjmp	.+4      	; 0xbaa <vfprintf+0x13c>
     ba6:	11 11       	cpse	r17, r1
     ba8:	11 50       	subi	r17, 0x01	; 1
     baa:	97 fe       	sbrs	r9, 7
     bac:	07 c0       	rjmp	.+14     	; 0xbbc <vfprintf+0x14e>
     bae:	1c 33       	cpi	r17, 0x3C	; 60
     bb0:	50 f4       	brcc	.+20     	; 0xbc6 <vfprintf+0x158>
     bb2:	44 24       	eor	r4, r4
     bb4:	43 94       	inc	r4
     bb6:	41 0e       	add	r4, r17
     bb8:	27 e0       	ldi	r18, 0x07	; 7
     bba:	0b c0       	rjmp	.+22     	; 0xbd2 <vfprintf+0x164>
     bbc:	18 30       	cpi	r17, 0x08	; 8
     bbe:	38 f0       	brcs	.+14     	; 0xbce <vfprintf+0x160>
     bc0:	27 e0       	ldi	r18, 0x07	; 7
     bc2:	17 e0       	ldi	r17, 0x07	; 7
     bc4:	05 c0       	rjmp	.+10     	; 0xbd0 <vfprintf+0x162>
     bc6:	27 e0       	ldi	r18, 0x07	; 7
     bc8:	9c e3       	ldi	r25, 0x3C	; 60
     bca:	49 2e       	mov	r4, r25
     bcc:	02 c0       	rjmp	.+4      	; 0xbd2 <vfprintf+0x164>
     bce:	21 2f       	mov	r18, r17
     bd0:	41 2c       	mov	r4, r1
     bd2:	56 01       	movw	r10, r12
     bd4:	84 e0       	ldi	r24, 0x04	; 4
     bd6:	a8 0e       	add	r10, r24
     bd8:	b1 1c       	adc	r11, r1
     bda:	f6 01       	movw	r30, r12
     bdc:	60 81       	ld	r22, Z
     bde:	71 81       	ldd	r23, Z+1	; 0x01
     be0:	82 81       	ldd	r24, Z+2	; 0x02
     be2:	93 81       	ldd	r25, Z+3	; 0x03
     be4:	04 2d       	mov	r16, r4
     be6:	a3 01       	movw	r20, r6
     be8:	0e 94 eb 08 	call	0x11d6	; 0x11d6 <__ftoa_engine>
     bec:	6c 01       	movw	r12, r24
     bee:	f9 81       	ldd	r31, Y+1	; 0x01
     bf0:	fc 87       	std	Y+12, r31	; 0x0c
     bf2:	f0 ff       	sbrs	r31, 0
     bf4:	02 c0       	rjmp	.+4      	; 0xbfa <vfprintf+0x18c>
     bf6:	f3 ff       	sbrs	r31, 3
     bf8:	06 c0       	rjmp	.+12     	; 0xc06 <vfprintf+0x198>
     bfa:	91 fc       	sbrc	r9, 1
     bfc:	06 c0       	rjmp	.+12     	; 0xc0a <vfprintf+0x19c>
     bfe:	92 fe       	sbrs	r9, 2
     c00:	06 c0       	rjmp	.+12     	; 0xc0e <vfprintf+0x1a0>
     c02:	00 e2       	ldi	r16, 0x20	; 32
     c04:	05 c0       	rjmp	.+10     	; 0xc10 <vfprintf+0x1a2>
     c06:	0d e2       	ldi	r16, 0x2D	; 45
     c08:	03 c0       	rjmp	.+6      	; 0xc10 <vfprintf+0x1a2>
     c0a:	0b e2       	ldi	r16, 0x2B	; 43
     c0c:	01 c0       	rjmp	.+2      	; 0xc10 <vfprintf+0x1a2>
     c0e:	00 e0       	ldi	r16, 0x00	; 0
     c10:	8c 85       	ldd	r24, Y+12	; 0x0c
     c12:	8c 70       	andi	r24, 0x0C	; 12
     c14:	19 f0       	breq	.+6      	; 0xc1c <vfprintf+0x1ae>
     c16:	01 11       	cpse	r16, r1
     c18:	5a c2       	rjmp	.+1204   	; 0x10ce <vfprintf+0x660>
     c1a:	9b c2       	rjmp	.+1334   	; 0x1152 <vfprintf+0x6e4>
     c1c:	97 fe       	sbrs	r9, 7
     c1e:	10 c0       	rjmp	.+32     	; 0xc40 <vfprintf+0x1d2>
     c20:	4c 0c       	add	r4, r12
     c22:	fc 85       	ldd	r31, Y+12	; 0x0c
     c24:	f4 ff       	sbrs	r31, 4
     c26:	04 c0       	rjmp	.+8      	; 0xc30 <vfprintf+0x1c2>
     c28:	8a 81       	ldd	r24, Y+2	; 0x02
     c2a:	81 33       	cpi	r24, 0x31	; 49
     c2c:	09 f4       	brne	.+2      	; 0xc30 <vfprintf+0x1c2>
     c2e:	4a 94       	dec	r4
     c30:	14 14       	cp	r1, r4
     c32:	74 f5       	brge	.+92     	; 0xc90 <vfprintf+0x222>
     c34:	28 e0       	ldi	r18, 0x08	; 8
     c36:	24 15       	cp	r18, r4
     c38:	78 f5       	brcc	.+94     	; 0xc98 <vfprintf+0x22a>
     c3a:	88 e0       	ldi	r24, 0x08	; 8
     c3c:	48 2e       	mov	r4, r24
     c3e:	2c c0       	rjmp	.+88     	; 0xc98 <vfprintf+0x22a>
     c40:	96 fc       	sbrc	r9, 6
     c42:	2a c0       	rjmp	.+84     	; 0xc98 <vfprintf+0x22a>
     c44:	81 2f       	mov	r24, r17
     c46:	90 e0       	ldi	r25, 0x00	; 0
     c48:	8c 15       	cp	r24, r12
     c4a:	9d 05       	cpc	r25, r13
     c4c:	9c f0       	brlt	.+38     	; 0xc74 <vfprintf+0x206>
     c4e:	3c ef       	ldi	r19, 0xFC	; 252
     c50:	c3 16       	cp	r12, r19
     c52:	3f ef       	ldi	r19, 0xFF	; 255
     c54:	d3 06       	cpc	r13, r19
     c56:	74 f0       	brlt	.+28     	; 0xc74 <vfprintf+0x206>
     c58:	89 2d       	mov	r24, r9
     c5a:	80 68       	ori	r24, 0x80	; 128
     c5c:	98 2e       	mov	r9, r24
     c5e:	0a c0       	rjmp	.+20     	; 0xc74 <vfprintf+0x206>
     c60:	e2 e0       	ldi	r30, 0x02	; 2
     c62:	f0 e0       	ldi	r31, 0x00	; 0
     c64:	ec 0f       	add	r30, r28
     c66:	fd 1f       	adc	r31, r29
     c68:	e1 0f       	add	r30, r17
     c6a:	f1 1d       	adc	r31, r1
     c6c:	80 81       	ld	r24, Z
     c6e:	80 33       	cpi	r24, 0x30	; 48
     c70:	19 f4       	brne	.+6      	; 0xc78 <vfprintf+0x20a>
     c72:	11 50       	subi	r17, 0x01	; 1
     c74:	11 11       	cpse	r17, r1
     c76:	f4 cf       	rjmp	.-24     	; 0xc60 <vfprintf+0x1f2>
     c78:	97 fe       	sbrs	r9, 7
     c7a:	0e c0       	rjmp	.+28     	; 0xc98 <vfprintf+0x22a>
     c7c:	44 24       	eor	r4, r4
     c7e:	43 94       	inc	r4
     c80:	41 0e       	add	r4, r17
     c82:	81 2f       	mov	r24, r17
     c84:	90 e0       	ldi	r25, 0x00	; 0
     c86:	c8 16       	cp	r12, r24
     c88:	d9 06       	cpc	r13, r25
     c8a:	2c f4       	brge	.+10     	; 0xc96 <vfprintf+0x228>
     c8c:	1c 19       	sub	r17, r12
     c8e:	04 c0       	rjmp	.+8      	; 0xc98 <vfprintf+0x22a>
     c90:	44 24       	eor	r4, r4
     c92:	43 94       	inc	r4
     c94:	01 c0       	rjmp	.+2      	; 0xc98 <vfprintf+0x22a>
     c96:	10 e0       	ldi	r17, 0x00	; 0
     c98:	97 fe       	sbrs	r9, 7
     c9a:	06 c0       	rjmp	.+12     	; 0xca8 <vfprintf+0x23a>
     c9c:	1c 14       	cp	r1, r12
     c9e:	1d 04       	cpc	r1, r13
     ca0:	34 f4       	brge	.+12     	; 0xcae <vfprintf+0x240>
     ca2:	c6 01       	movw	r24, r12
     ca4:	01 96       	adiw	r24, 0x01	; 1
     ca6:	05 c0       	rjmp	.+10     	; 0xcb2 <vfprintf+0x244>
     ca8:	85 e0       	ldi	r24, 0x05	; 5
     caa:	90 e0       	ldi	r25, 0x00	; 0
     cac:	02 c0       	rjmp	.+4      	; 0xcb2 <vfprintf+0x244>
     cae:	81 e0       	ldi	r24, 0x01	; 1
     cb0:	90 e0       	ldi	r25, 0x00	; 0
     cb2:	01 11       	cpse	r16, r1
     cb4:	01 96       	adiw	r24, 0x01	; 1
     cb6:	11 23       	and	r17, r17
     cb8:	31 f0       	breq	.+12     	; 0xcc6 <vfprintf+0x258>
     cba:	21 2f       	mov	r18, r17
     cbc:	30 e0       	ldi	r19, 0x00	; 0
     cbe:	2f 5f       	subi	r18, 0xFF	; 255
     cc0:	3f 4f       	sbci	r19, 0xFF	; 255
     cc2:	82 0f       	add	r24, r18
     cc4:	93 1f       	adc	r25, r19
     cc6:	25 2d       	mov	r18, r5
     cc8:	30 e0       	ldi	r19, 0x00	; 0
     cca:	82 17       	cp	r24, r18
     ccc:	93 07       	cpc	r25, r19
     cce:	14 f4       	brge	.+4      	; 0xcd4 <vfprintf+0x266>
     cd0:	58 1a       	sub	r5, r24
     cd2:	01 c0       	rjmp	.+2      	; 0xcd6 <vfprintf+0x268>
     cd4:	51 2c       	mov	r5, r1
     cd6:	89 2d       	mov	r24, r9
     cd8:	89 70       	andi	r24, 0x09	; 9
     cda:	49 f4       	brne	.+18     	; 0xcee <vfprintf+0x280>
     cdc:	55 20       	and	r5, r5
     cde:	39 f0       	breq	.+14     	; 0xcee <vfprintf+0x280>
     ce0:	b7 01       	movw	r22, r14
     ce2:	80 e2       	ldi	r24, 0x20	; 32
     ce4:	90 e0       	ldi	r25, 0x00	; 0
     ce6:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <fputc>
     cea:	5a 94       	dec	r5
     cec:	f7 cf       	rjmp	.-18     	; 0xcdc <vfprintf+0x26e>
     cee:	00 23       	and	r16, r16
     cf0:	29 f0       	breq	.+10     	; 0xcfc <vfprintf+0x28e>
     cf2:	b7 01       	movw	r22, r14
     cf4:	80 2f       	mov	r24, r16
     cf6:	90 e0       	ldi	r25, 0x00	; 0
     cf8:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <fputc>
     cfc:	93 fc       	sbrc	r9, 3
     cfe:	09 c0       	rjmp	.+18     	; 0xd12 <vfprintf+0x2a4>
     d00:	55 20       	and	r5, r5
     d02:	39 f0       	breq	.+14     	; 0xd12 <vfprintf+0x2a4>
     d04:	b7 01       	movw	r22, r14
     d06:	80 e3       	ldi	r24, 0x30	; 48
     d08:	90 e0       	ldi	r25, 0x00	; 0
     d0a:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <fputc>
     d0e:	5a 94       	dec	r5
     d10:	f7 cf       	rjmp	.-18     	; 0xd00 <vfprintf+0x292>
     d12:	97 fe       	sbrs	r9, 7
     d14:	4c c0       	rjmp	.+152    	; 0xdae <vfprintf+0x340>
     d16:	46 01       	movw	r8, r12
     d18:	d7 fe       	sbrs	r13, 7
     d1a:	02 c0       	rjmp	.+4      	; 0xd20 <vfprintf+0x2b2>
     d1c:	81 2c       	mov	r8, r1
     d1e:	91 2c       	mov	r9, r1
     d20:	c6 01       	movw	r24, r12
     d22:	88 19       	sub	r24, r8
     d24:	99 09       	sbc	r25, r9
     d26:	f3 01       	movw	r30, r6
     d28:	e8 0f       	add	r30, r24
     d2a:	f9 1f       	adc	r31, r25
     d2c:	fe 87       	std	Y+14, r31	; 0x0e
     d2e:	ed 87       	std	Y+13, r30	; 0x0d
     d30:	96 01       	movw	r18, r12
     d32:	24 19       	sub	r18, r4
     d34:	31 09       	sbc	r19, r1
     d36:	38 8b       	std	Y+16, r19	; 0x10
     d38:	2f 87       	std	Y+15, r18	; 0x0f
     d3a:	01 2f       	mov	r16, r17
     d3c:	10 e0       	ldi	r17, 0x00	; 0
     d3e:	11 95       	neg	r17
     d40:	01 95       	neg	r16
     d42:	11 09       	sbc	r17, r1
     d44:	3f ef       	ldi	r19, 0xFF	; 255
     d46:	83 16       	cp	r8, r19
     d48:	93 06       	cpc	r9, r19
     d4a:	29 f4       	brne	.+10     	; 0xd56 <vfprintf+0x2e8>
     d4c:	b7 01       	movw	r22, r14
     d4e:	8e e2       	ldi	r24, 0x2E	; 46
     d50:	90 e0       	ldi	r25, 0x00	; 0
     d52:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <fputc>
     d56:	c8 14       	cp	r12, r8
     d58:	d9 04       	cpc	r13, r9
     d5a:	4c f0       	brlt	.+18     	; 0xd6e <vfprintf+0x300>
     d5c:	8f 85       	ldd	r24, Y+15	; 0x0f
     d5e:	98 89       	ldd	r25, Y+16	; 0x10
     d60:	88 15       	cp	r24, r8
     d62:	99 05       	cpc	r25, r9
     d64:	24 f4       	brge	.+8      	; 0xd6e <vfprintf+0x300>
     d66:	ed 85       	ldd	r30, Y+13	; 0x0d
     d68:	fe 85       	ldd	r31, Y+14	; 0x0e
     d6a:	81 81       	ldd	r24, Z+1	; 0x01
     d6c:	01 c0       	rjmp	.+2      	; 0xd70 <vfprintf+0x302>
     d6e:	80 e3       	ldi	r24, 0x30	; 48
     d70:	f1 e0       	ldi	r31, 0x01	; 1
     d72:	8f 1a       	sub	r8, r31
     d74:	91 08       	sbc	r9, r1
     d76:	2d 85       	ldd	r18, Y+13	; 0x0d
     d78:	3e 85       	ldd	r19, Y+14	; 0x0e
     d7a:	2f 5f       	subi	r18, 0xFF	; 255
     d7c:	3f 4f       	sbci	r19, 0xFF	; 255
     d7e:	3e 87       	std	Y+14, r19	; 0x0e
     d80:	2d 87       	std	Y+13, r18	; 0x0d
     d82:	80 16       	cp	r8, r16
     d84:	91 06       	cpc	r9, r17
     d86:	2c f0       	brlt	.+10     	; 0xd92 <vfprintf+0x324>
     d88:	b7 01       	movw	r22, r14
     d8a:	90 e0       	ldi	r25, 0x00	; 0
     d8c:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <fputc>
     d90:	d9 cf       	rjmp	.-78     	; 0xd44 <vfprintf+0x2d6>
     d92:	c8 14       	cp	r12, r8
     d94:	d9 04       	cpc	r13, r9
     d96:	41 f4       	brne	.+16     	; 0xda8 <vfprintf+0x33a>
     d98:	9a 81       	ldd	r25, Y+2	; 0x02
     d9a:	96 33       	cpi	r25, 0x36	; 54
     d9c:	20 f4       	brcc	.+8      	; 0xda6 <vfprintf+0x338>
     d9e:	95 33       	cpi	r25, 0x35	; 53
     da0:	19 f4       	brne	.+6      	; 0xda8 <vfprintf+0x33a>
     da2:	3c 85       	ldd	r19, Y+12	; 0x0c
     da4:	34 ff       	sbrs	r19, 4
     da6:	81 e3       	ldi	r24, 0x31	; 49
     da8:	b7 01       	movw	r22, r14
     daa:	90 e0       	ldi	r25, 0x00	; 0
     dac:	4e c0       	rjmp	.+156    	; 0xe4a <vfprintf+0x3dc>
     dae:	8a 81       	ldd	r24, Y+2	; 0x02
     db0:	81 33       	cpi	r24, 0x31	; 49
     db2:	19 f0       	breq	.+6      	; 0xdba <vfprintf+0x34c>
     db4:	9c 85       	ldd	r25, Y+12	; 0x0c
     db6:	9f 7e       	andi	r25, 0xEF	; 239
     db8:	9c 87       	std	Y+12, r25	; 0x0c
     dba:	b7 01       	movw	r22, r14
     dbc:	90 e0       	ldi	r25, 0x00	; 0
     dbe:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <fputc>
     dc2:	11 11       	cpse	r17, r1
     dc4:	05 c0       	rjmp	.+10     	; 0xdd0 <vfprintf+0x362>
     dc6:	94 fc       	sbrc	r9, 4
     dc8:	18 c0       	rjmp	.+48     	; 0xdfa <vfprintf+0x38c>
     dca:	85 e6       	ldi	r24, 0x65	; 101
     dcc:	90 e0       	ldi	r25, 0x00	; 0
     dce:	17 c0       	rjmp	.+46     	; 0xdfe <vfprintf+0x390>
     dd0:	b7 01       	movw	r22, r14
     dd2:	8e e2       	ldi	r24, 0x2E	; 46
     dd4:	90 e0       	ldi	r25, 0x00	; 0
     dd6:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <fputc>
     dda:	1e 5f       	subi	r17, 0xFE	; 254
     ddc:	82 e0       	ldi	r24, 0x02	; 2
     dde:	01 e0       	ldi	r16, 0x01	; 1
     de0:	08 0f       	add	r16, r24
     de2:	f3 01       	movw	r30, r6
     de4:	e8 0f       	add	r30, r24
     de6:	f1 1d       	adc	r31, r1
     de8:	80 81       	ld	r24, Z
     dea:	b7 01       	movw	r22, r14
     dec:	90 e0       	ldi	r25, 0x00	; 0
     dee:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <fputc>
     df2:	80 2f       	mov	r24, r16
     df4:	01 13       	cpse	r16, r17
     df6:	f3 cf       	rjmp	.-26     	; 0xdde <vfprintf+0x370>
     df8:	e6 cf       	rjmp	.-52     	; 0xdc6 <vfprintf+0x358>
     dfa:	85 e4       	ldi	r24, 0x45	; 69
     dfc:	90 e0       	ldi	r25, 0x00	; 0
     dfe:	b7 01       	movw	r22, r14
     e00:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <fputc>
     e04:	d7 fc       	sbrc	r13, 7
     e06:	06 c0       	rjmp	.+12     	; 0xe14 <vfprintf+0x3a6>
     e08:	c1 14       	cp	r12, r1
     e0a:	d1 04       	cpc	r13, r1
     e0c:	41 f4       	brne	.+16     	; 0xe1e <vfprintf+0x3b0>
     e0e:	ec 85       	ldd	r30, Y+12	; 0x0c
     e10:	e4 ff       	sbrs	r30, 4
     e12:	05 c0       	rjmp	.+10     	; 0xe1e <vfprintf+0x3b0>
     e14:	d1 94       	neg	r13
     e16:	c1 94       	neg	r12
     e18:	d1 08       	sbc	r13, r1
     e1a:	8d e2       	ldi	r24, 0x2D	; 45
     e1c:	01 c0       	rjmp	.+2      	; 0xe20 <vfprintf+0x3b2>
     e1e:	8b e2       	ldi	r24, 0x2B	; 43
     e20:	b7 01       	movw	r22, r14
     e22:	90 e0       	ldi	r25, 0x00	; 0
     e24:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <fputc>
     e28:	80 e3       	ldi	r24, 0x30	; 48
     e2a:	2a e0       	ldi	r18, 0x0A	; 10
     e2c:	c2 16       	cp	r12, r18
     e2e:	d1 04       	cpc	r13, r1
     e30:	2c f0       	brlt	.+10     	; 0xe3c <vfprintf+0x3ce>
     e32:	8f 5f       	subi	r24, 0xFF	; 255
     e34:	fa e0       	ldi	r31, 0x0A	; 10
     e36:	cf 1a       	sub	r12, r31
     e38:	d1 08       	sbc	r13, r1
     e3a:	f7 cf       	rjmp	.-18     	; 0xe2a <vfprintf+0x3bc>
     e3c:	b7 01       	movw	r22, r14
     e3e:	90 e0       	ldi	r25, 0x00	; 0
     e40:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <fputc>
     e44:	b7 01       	movw	r22, r14
     e46:	c6 01       	movw	r24, r12
     e48:	c0 96       	adiw	r24, 0x30	; 48
     e4a:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <fputc>
     e4e:	54 c1       	rjmp	.+680    	; 0x10f8 <vfprintf+0x68a>
     e50:	83 36       	cpi	r24, 0x63	; 99
     e52:	31 f0       	breq	.+12     	; 0xe60 <vfprintf+0x3f2>
     e54:	83 37       	cpi	r24, 0x73	; 115
     e56:	79 f0       	breq	.+30     	; 0xe76 <vfprintf+0x408>
     e58:	83 35       	cpi	r24, 0x53	; 83
     e5a:	09 f0       	breq	.+2      	; 0xe5e <vfprintf+0x3f0>
     e5c:	56 c0       	rjmp	.+172    	; 0xf0a <vfprintf+0x49c>
     e5e:	20 c0       	rjmp	.+64     	; 0xea0 <vfprintf+0x432>
     e60:	56 01       	movw	r10, r12
     e62:	32 e0       	ldi	r19, 0x02	; 2
     e64:	a3 0e       	add	r10, r19
     e66:	b1 1c       	adc	r11, r1
     e68:	f6 01       	movw	r30, r12
     e6a:	80 81       	ld	r24, Z
     e6c:	89 83       	std	Y+1, r24	; 0x01
     e6e:	01 e0       	ldi	r16, 0x01	; 1
     e70:	10 e0       	ldi	r17, 0x00	; 0
     e72:	63 01       	movw	r12, r6
     e74:	12 c0       	rjmp	.+36     	; 0xe9a <vfprintf+0x42c>
     e76:	56 01       	movw	r10, r12
     e78:	f2 e0       	ldi	r31, 0x02	; 2
     e7a:	af 0e       	add	r10, r31
     e7c:	b1 1c       	adc	r11, r1
     e7e:	f6 01       	movw	r30, r12
     e80:	c0 80       	ld	r12, Z
     e82:	d1 80       	ldd	r13, Z+1	; 0x01
     e84:	96 fe       	sbrs	r9, 6
     e86:	03 c0       	rjmp	.+6      	; 0xe8e <vfprintf+0x420>
     e88:	61 2f       	mov	r22, r17
     e8a:	70 e0       	ldi	r23, 0x00	; 0
     e8c:	02 c0       	rjmp	.+4      	; 0xe92 <vfprintf+0x424>
     e8e:	6f ef       	ldi	r22, 0xFF	; 255
     e90:	7f ef       	ldi	r23, 0xFF	; 255
     e92:	c6 01       	movw	r24, r12
     e94:	0e 94 ce 09 	call	0x139c	; 0x139c <strnlen>
     e98:	8c 01       	movw	r16, r24
     e9a:	f9 2d       	mov	r31, r9
     e9c:	ff 77       	andi	r31, 0x7F	; 127
     e9e:	14 c0       	rjmp	.+40     	; 0xec8 <vfprintf+0x45a>
     ea0:	56 01       	movw	r10, r12
     ea2:	22 e0       	ldi	r18, 0x02	; 2
     ea4:	a2 0e       	add	r10, r18
     ea6:	b1 1c       	adc	r11, r1
     ea8:	f6 01       	movw	r30, r12
     eaa:	c0 80       	ld	r12, Z
     eac:	d1 80       	ldd	r13, Z+1	; 0x01
     eae:	96 fe       	sbrs	r9, 6
     eb0:	03 c0       	rjmp	.+6      	; 0xeb8 <vfprintf+0x44a>
     eb2:	61 2f       	mov	r22, r17
     eb4:	70 e0       	ldi	r23, 0x00	; 0
     eb6:	02 c0       	rjmp	.+4      	; 0xebc <vfprintf+0x44e>
     eb8:	6f ef       	ldi	r22, 0xFF	; 255
     eba:	7f ef       	ldi	r23, 0xFF	; 255
     ebc:	c6 01       	movw	r24, r12
     ebe:	0e 94 c3 09 	call	0x1386	; 0x1386 <strnlen_P>
     ec2:	8c 01       	movw	r16, r24
     ec4:	f9 2d       	mov	r31, r9
     ec6:	f0 68       	ori	r31, 0x80	; 128
     ec8:	9f 2e       	mov	r9, r31
     eca:	f3 fd       	sbrc	r31, 3
     ecc:	1a c0       	rjmp	.+52     	; 0xf02 <vfprintf+0x494>
     ece:	85 2d       	mov	r24, r5
     ed0:	90 e0       	ldi	r25, 0x00	; 0
     ed2:	08 17       	cp	r16, r24
     ed4:	19 07       	cpc	r17, r25
     ed6:	a8 f4       	brcc	.+42     	; 0xf02 <vfprintf+0x494>
     ed8:	b7 01       	movw	r22, r14
     eda:	80 e2       	ldi	r24, 0x20	; 32
     edc:	90 e0       	ldi	r25, 0x00	; 0
     ede:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <fputc>
     ee2:	5a 94       	dec	r5
     ee4:	f4 cf       	rjmp	.-24     	; 0xece <vfprintf+0x460>
     ee6:	f6 01       	movw	r30, r12
     ee8:	97 fc       	sbrc	r9, 7
     eea:	85 91       	lpm	r24, Z+
     eec:	97 fe       	sbrs	r9, 7
     eee:	81 91       	ld	r24, Z+
     ef0:	6f 01       	movw	r12, r30
     ef2:	b7 01       	movw	r22, r14
     ef4:	90 e0       	ldi	r25, 0x00	; 0
     ef6:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <fputc>
     efa:	51 10       	cpse	r5, r1
     efc:	5a 94       	dec	r5
     efe:	01 50       	subi	r16, 0x01	; 1
     f00:	11 09       	sbc	r17, r1
     f02:	01 15       	cp	r16, r1
     f04:	11 05       	cpc	r17, r1
     f06:	79 f7       	brne	.-34     	; 0xee6 <vfprintf+0x478>
     f08:	f7 c0       	rjmp	.+494    	; 0x10f8 <vfprintf+0x68a>
     f0a:	84 36       	cpi	r24, 0x64	; 100
     f0c:	11 f0       	breq	.+4      	; 0xf12 <vfprintf+0x4a4>
     f0e:	89 36       	cpi	r24, 0x69	; 105
     f10:	61 f5       	brne	.+88     	; 0xf6a <vfprintf+0x4fc>
     f12:	56 01       	movw	r10, r12
     f14:	97 fe       	sbrs	r9, 7
     f16:	09 c0       	rjmp	.+18     	; 0xf2a <vfprintf+0x4bc>
     f18:	24 e0       	ldi	r18, 0x04	; 4
     f1a:	a2 0e       	add	r10, r18
     f1c:	b1 1c       	adc	r11, r1
     f1e:	f6 01       	movw	r30, r12
     f20:	60 81       	ld	r22, Z
     f22:	71 81       	ldd	r23, Z+1	; 0x01
     f24:	82 81       	ldd	r24, Z+2	; 0x02
     f26:	93 81       	ldd	r25, Z+3	; 0x03
     f28:	0a c0       	rjmp	.+20     	; 0xf3e <vfprintf+0x4d0>
     f2a:	f2 e0       	ldi	r31, 0x02	; 2
     f2c:	af 0e       	add	r10, r31
     f2e:	b1 1c       	adc	r11, r1
     f30:	f6 01       	movw	r30, r12
     f32:	60 81       	ld	r22, Z
     f34:	71 81       	ldd	r23, Z+1	; 0x01
     f36:	07 2e       	mov	r0, r23
     f38:	00 0c       	add	r0, r0
     f3a:	88 0b       	sbc	r24, r24
     f3c:	99 0b       	sbc	r25, r25
     f3e:	f9 2d       	mov	r31, r9
     f40:	ff 76       	andi	r31, 0x6F	; 111
     f42:	9f 2e       	mov	r9, r31
     f44:	97 ff       	sbrs	r25, 7
     f46:	09 c0       	rjmp	.+18     	; 0xf5a <vfprintf+0x4ec>
     f48:	90 95       	com	r25
     f4a:	80 95       	com	r24
     f4c:	70 95       	com	r23
     f4e:	61 95       	neg	r22
     f50:	7f 4f       	sbci	r23, 0xFF	; 255
     f52:	8f 4f       	sbci	r24, 0xFF	; 255
     f54:	9f 4f       	sbci	r25, 0xFF	; 255
     f56:	f0 68       	ori	r31, 0x80	; 128
     f58:	9f 2e       	mov	r9, r31
     f5a:	2a e0       	ldi	r18, 0x0A	; 10
     f5c:	30 e0       	ldi	r19, 0x00	; 0
     f5e:	a3 01       	movw	r20, r6
     f60:	0e 94 32 0a 	call	0x1464	; 0x1464 <__ultoa_invert>
     f64:	c8 2e       	mov	r12, r24
     f66:	c6 18       	sub	r12, r6
     f68:	3f c0       	rjmp	.+126    	; 0xfe8 <vfprintf+0x57a>
     f6a:	09 2d       	mov	r16, r9
     f6c:	85 37       	cpi	r24, 0x75	; 117
     f6e:	21 f4       	brne	.+8      	; 0xf78 <vfprintf+0x50a>
     f70:	0f 7e       	andi	r16, 0xEF	; 239
     f72:	2a e0       	ldi	r18, 0x0A	; 10
     f74:	30 e0       	ldi	r19, 0x00	; 0
     f76:	1d c0       	rjmp	.+58     	; 0xfb2 <vfprintf+0x544>
     f78:	09 7f       	andi	r16, 0xF9	; 249
     f7a:	8f 36       	cpi	r24, 0x6F	; 111
     f7c:	91 f0       	breq	.+36     	; 0xfa2 <vfprintf+0x534>
     f7e:	18 f4       	brcc	.+6      	; 0xf86 <vfprintf+0x518>
     f80:	88 35       	cpi	r24, 0x58	; 88
     f82:	59 f0       	breq	.+22     	; 0xf9a <vfprintf+0x52c>
     f84:	c3 c0       	rjmp	.+390    	; 0x110c <vfprintf+0x69e>
     f86:	80 37       	cpi	r24, 0x70	; 112
     f88:	19 f0       	breq	.+6      	; 0xf90 <vfprintf+0x522>
     f8a:	88 37       	cpi	r24, 0x78	; 120
     f8c:	11 f0       	breq	.+4      	; 0xf92 <vfprintf+0x524>
     f8e:	be c0       	rjmp	.+380    	; 0x110c <vfprintf+0x69e>
     f90:	00 61       	ori	r16, 0x10	; 16
     f92:	04 ff       	sbrs	r16, 4
     f94:	09 c0       	rjmp	.+18     	; 0xfa8 <vfprintf+0x53a>
     f96:	04 60       	ori	r16, 0x04	; 4
     f98:	07 c0       	rjmp	.+14     	; 0xfa8 <vfprintf+0x53a>
     f9a:	94 fe       	sbrs	r9, 4
     f9c:	08 c0       	rjmp	.+16     	; 0xfae <vfprintf+0x540>
     f9e:	06 60       	ori	r16, 0x06	; 6
     fa0:	06 c0       	rjmp	.+12     	; 0xfae <vfprintf+0x540>
     fa2:	28 e0       	ldi	r18, 0x08	; 8
     fa4:	30 e0       	ldi	r19, 0x00	; 0
     fa6:	05 c0       	rjmp	.+10     	; 0xfb2 <vfprintf+0x544>
     fa8:	20 e1       	ldi	r18, 0x10	; 16
     faa:	30 e0       	ldi	r19, 0x00	; 0
     fac:	02 c0       	rjmp	.+4      	; 0xfb2 <vfprintf+0x544>
     fae:	20 e1       	ldi	r18, 0x10	; 16
     fb0:	32 e0       	ldi	r19, 0x02	; 2
     fb2:	56 01       	movw	r10, r12
     fb4:	07 ff       	sbrs	r16, 7
     fb6:	09 c0       	rjmp	.+18     	; 0xfca <vfprintf+0x55c>
     fb8:	84 e0       	ldi	r24, 0x04	; 4
     fba:	a8 0e       	add	r10, r24
     fbc:	b1 1c       	adc	r11, r1
     fbe:	f6 01       	movw	r30, r12
     fc0:	60 81       	ld	r22, Z
     fc2:	71 81       	ldd	r23, Z+1	; 0x01
     fc4:	82 81       	ldd	r24, Z+2	; 0x02
     fc6:	93 81       	ldd	r25, Z+3	; 0x03
     fc8:	08 c0       	rjmp	.+16     	; 0xfda <vfprintf+0x56c>
     fca:	f2 e0       	ldi	r31, 0x02	; 2
     fcc:	af 0e       	add	r10, r31
     fce:	b1 1c       	adc	r11, r1
     fd0:	f6 01       	movw	r30, r12
     fd2:	60 81       	ld	r22, Z
     fd4:	71 81       	ldd	r23, Z+1	; 0x01
     fd6:	80 e0       	ldi	r24, 0x00	; 0
     fd8:	90 e0       	ldi	r25, 0x00	; 0
     fda:	a3 01       	movw	r20, r6
     fdc:	0e 94 32 0a 	call	0x1464	; 0x1464 <__ultoa_invert>
     fe0:	c8 2e       	mov	r12, r24
     fe2:	c6 18       	sub	r12, r6
     fe4:	0f 77       	andi	r16, 0x7F	; 127
     fe6:	90 2e       	mov	r9, r16
     fe8:	96 fe       	sbrs	r9, 6
     fea:	0b c0       	rjmp	.+22     	; 0x1002 <vfprintf+0x594>
     fec:	09 2d       	mov	r16, r9
     fee:	0e 7f       	andi	r16, 0xFE	; 254
     ff0:	c1 16       	cp	r12, r17
     ff2:	50 f4       	brcc	.+20     	; 0x1008 <vfprintf+0x59a>
     ff4:	94 fe       	sbrs	r9, 4
     ff6:	0a c0       	rjmp	.+20     	; 0x100c <vfprintf+0x59e>
     ff8:	92 fc       	sbrc	r9, 2
     ffa:	08 c0       	rjmp	.+16     	; 0x100c <vfprintf+0x59e>
     ffc:	09 2d       	mov	r16, r9
     ffe:	0e 7e       	andi	r16, 0xEE	; 238
    1000:	05 c0       	rjmp	.+10     	; 0x100c <vfprintf+0x59e>
    1002:	dc 2c       	mov	r13, r12
    1004:	09 2d       	mov	r16, r9
    1006:	03 c0       	rjmp	.+6      	; 0x100e <vfprintf+0x5a0>
    1008:	dc 2c       	mov	r13, r12
    100a:	01 c0       	rjmp	.+2      	; 0x100e <vfprintf+0x5a0>
    100c:	d1 2e       	mov	r13, r17
    100e:	04 ff       	sbrs	r16, 4
    1010:	0d c0       	rjmp	.+26     	; 0x102c <vfprintf+0x5be>
    1012:	fe 01       	movw	r30, r28
    1014:	ec 0d       	add	r30, r12
    1016:	f1 1d       	adc	r31, r1
    1018:	80 81       	ld	r24, Z
    101a:	80 33       	cpi	r24, 0x30	; 48
    101c:	11 f4       	brne	.+4      	; 0x1022 <vfprintf+0x5b4>
    101e:	09 7e       	andi	r16, 0xE9	; 233
    1020:	09 c0       	rjmp	.+18     	; 0x1034 <vfprintf+0x5c6>
    1022:	02 ff       	sbrs	r16, 2
    1024:	06 c0       	rjmp	.+12     	; 0x1032 <vfprintf+0x5c4>
    1026:	d3 94       	inc	r13
    1028:	d3 94       	inc	r13
    102a:	04 c0       	rjmp	.+8      	; 0x1034 <vfprintf+0x5c6>
    102c:	80 2f       	mov	r24, r16
    102e:	86 78       	andi	r24, 0x86	; 134
    1030:	09 f0       	breq	.+2      	; 0x1034 <vfprintf+0x5c6>
    1032:	d3 94       	inc	r13
    1034:	03 fd       	sbrc	r16, 3
    1036:	11 c0       	rjmp	.+34     	; 0x105a <vfprintf+0x5ec>
    1038:	00 ff       	sbrs	r16, 0
    103a:	06 c0       	rjmp	.+12     	; 0x1048 <vfprintf+0x5da>
    103c:	1c 2d       	mov	r17, r12
    103e:	d5 14       	cp	r13, r5
    1040:	80 f4       	brcc	.+32     	; 0x1062 <vfprintf+0x5f4>
    1042:	15 0d       	add	r17, r5
    1044:	1d 19       	sub	r17, r13
    1046:	0d c0       	rjmp	.+26     	; 0x1062 <vfprintf+0x5f4>
    1048:	d5 14       	cp	r13, r5
    104a:	58 f4       	brcc	.+22     	; 0x1062 <vfprintf+0x5f4>
    104c:	b7 01       	movw	r22, r14
    104e:	80 e2       	ldi	r24, 0x20	; 32
    1050:	90 e0       	ldi	r25, 0x00	; 0
    1052:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <fputc>
    1056:	d3 94       	inc	r13
    1058:	f7 cf       	rjmp	.-18     	; 0x1048 <vfprintf+0x5da>
    105a:	d5 14       	cp	r13, r5
    105c:	10 f4       	brcc	.+4      	; 0x1062 <vfprintf+0x5f4>
    105e:	5d 18       	sub	r5, r13
    1060:	01 c0       	rjmp	.+2      	; 0x1064 <vfprintf+0x5f6>
    1062:	51 2c       	mov	r5, r1
    1064:	04 ff       	sbrs	r16, 4
    1066:	10 c0       	rjmp	.+32     	; 0x1088 <vfprintf+0x61a>
    1068:	b7 01       	movw	r22, r14
    106a:	80 e3       	ldi	r24, 0x30	; 48
    106c:	90 e0       	ldi	r25, 0x00	; 0
    106e:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <fputc>
    1072:	02 ff       	sbrs	r16, 2
    1074:	17 c0       	rjmp	.+46     	; 0x10a4 <vfprintf+0x636>
    1076:	01 fd       	sbrc	r16, 1
    1078:	03 c0       	rjmp	.+6      	; 0x1080 <vfprintf+0x612>
    107a:	88 e7       	ldi	r24, 0x78	; 120
    107c:	90 e0       	ldi	r25, 0x00	; 0
    107e:	02 c0       	rjmp	.+4      	; 0x1084 <vfprintf+0x616>
    1080:	88 e5       	ldi	r24, 0x58	; 88
    1082:	90 e0       	ldi	r25, 0x00	; 0
    1084:	b7 01       	movw	r22, r14
    1086:	0c c0       	rjmp	.+24     	; 0x10a0 <vfprintf+0x632>
    1088:	80 2f       	mov	r24, r16
    108a:	86 78       	andi	r24, 0x86	; 134
    108c:	59 f0       	breq	.+22     	; 0x10a4 <vfprintf+0x636>
    108e:	01 ff       	sbrs	r16, 1
    1090:	02 c0       	rjmp	.+4      	; 0x1096 <vfprintf+0x628>
    1092:	8b e2       	ldi	r24, 0x2B	; 43
    1094:	01 c0       	rjmp	.+2      	; 0x1098 <vfprintf+0x62a>
    1096:	80 e2       	ldi	r24, 0x20	; 32
    1098:	07 fd       	sbrc	r16, 7
    109a:	8d e2       	ldi	r24, 0x2D	; 45
    109c:	b7 01       	movw	r22, r14
    109e:	90 e0       	ldi	r25, 0x00	; 0
    10a0:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <fputc>
    10a4:	c1 16       	cp	r12, r17
    10a6:	38 f4       	brcc	.+14     	; 0x10b6 <vfprintf+0x648>
    10a8:	b7 01       	movw	r22, r14
    10aa:	80 e3       	ldi	r24, 0x30	; 48
    10ac:	90 e0       	ldi	r25, 0x00	; 0
    10ae:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <fputc>
    10b2:	11 50       	subi	r17, 0x01	; 1
    10b4:	f7 cf       	rjmp	.-18     	; 0x10a4 <vfprintf+0x636>
    10b6:	ca 94       	dec	r12
    10b8:	f3 01       	movw	r30, r6
    10ba:	ec 0d       	add	r30, r12
    10bc:	f1 1d       	adc	r31, r1
    10be:	80 81       	ld	r24, Z
    10c0:	b7 01       	movw	r22, r14
    10c2:	90 e0       	ldi	r25, 0x00	; 0
    10c4:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <fputc>
    10c8:	c1 10       	cpse	r12, r1
    10ca:	f5 cf       	rjmp	.-22     	; 0x10b6 <vfprintf+0x648>
    10cc:	15 c0       	rjmp	.+42     	; 0x10f8 <vfprintf+0x68a>
    10ce:	f4 e0       	ldi	r31, 0x04	; 4
    10d0:	f5 15       	cp	r31, r5
    10d2:	60 f5       	brcc	.+88     	; 0x112c <vfprintf+0x6be>
    10d4:	84 e0       	ldi	r24, 0x04	; 4
    10d6:	58 1a       	sub	r5, r24
    10d8:	93 fe       	sbrs	r9, 3
    10da:	1f c0       	rjmp	.+62     	; 0x111a <vfprintf+0x6ac>
    10dc:	01 11       	cpse	r16, r1
    10de:	27 c0       	rjmp	.+78     	; 0x112e <vfprintf+0x6c0>
    10e0:	2c 85       	ldd	r18, Y+12	; 0x0c
    10e2:	23 ff       	sbrs	r18, 3
    10e4:	2a c0       	rjmp	.+84     	; 0x113a <vfprintf+0x6cc>
    10e6:	08 e6       	ldi	r16, 0x68	; 104
    10e8:	10 e0       	ldi	r17, 0x00	; 0
    10ea:	39 2d       	mov	r19, r9
    10ec:	30 71       	andi	r19, 0x10	; 16
    10ee:	93 2e       	mov	r9, r19
    10f0:	f8 01       	movw	r30, r16
    10f2:	84 91       	lpm	r24, Z
    10f4:	81 11       	cpse	r24, r1
    10f6:	24 c0       	rjmp	.+72     	; 0x1140 <vfprintf+0x6d2>
    10f8:	55 20       	and	r5, r5
    10fa:	09 f4       	brne	.+2      	; 0x10fe <vfprintf+0x690>
    10fc:	e4 cc       	rjmp	.-1592   	; 0xac6 <vfprintf+0x58>
    10fe:	b7 01       	movw	r22, r14
    1100:	80 e2       	ldi	r24, 0x20	; 32
    1102:	90 e0       	ldi	r25, 0x00	; 0
    1104:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <fputc>
    1108:	5a 94       	dec	r5
    110a:	f6 cf       	rjmp	.-20     	; 0x10f8 <vfprintf+0x68a>
    110c:	f7 01       	movw	r30, r14
    110e:	86 81       	ldd	r24, Z+6	; 0x06
    1110:	97 81       	ldd	r25, Z+7	; 0x07
    1112:	26 c0       	rjmp	.+76     	; 0x1160 <vfprintf+0x6f2>
    1114:	8f ef       	ldi	r24, 0xFF	; 255
    1116:	9f ef       	ldi	r25, 0xFF	; 255
    1118:	23 c0       	rjmp	.+70     	; 0x1160 <vfprintf+0x6f2>
    111a:	b7 01       	movw	r22, r14
    111c:	80 e2       	ldi	r24, 0x20	; 32
    111e:	90 e0       	ldi	r25, 0x00	; 0
    1120:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <fputc>
    1124:	5a 94       	dec	r5
    1126:	51 10       	cpse	r5, r1
    1128:	f8 cf       	rjmp	.-16     	; 0x111a <vfprintf+0x6ac>
    112a:	d8 cf       	rjmp	.-80     	; 0x10dc <vfprintf+0x66e>
    112c:	51 2c       	mov	r5, r1
    112e:	b7 01       	movw	r22, r14
    1130:	80 2f       	mov	r24, r16
    1132:	90 e0       	ldi	r25, 0x00	; 0
    1134:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <fputc>
    1138:	d3 cf       	rjmp	.-90     	; 0x10e0 <vfprintf+0x672>
    113a:	0c e6       	ldi	r16, 0x6C	; 108
    113c:	10 e0       	ldi	r17, 0x00	; 0
    113e:	d5 cf       	rjmp	.-86     	; 0x10ea <vfprintf+0x67c>
    1140:	91 10       	cpse	r9, r1
    1142:	80 52       	subi	r24, 0x20	; 32
    1144:	b7 01       	movw	r22, r14
    1146:	90 e0       	ldi	r25, 0x00	; 0
    1148:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <fputc>
    114c:	0f 5f       	subi	r16, 0xFF	; 255
    114e:	1f 4f       	sbci	r17, 0xFF	; 255
    1150:	cf cf       	rjmp	.-98     	; 0x10f0 <vfprintf+0x682>
    1152:	23 e0       	ldi	r18, 0x03	; 3
    1154:	25 15       	cp	r18, r5
    1156:	10 f4       	brcc	.+4      	; 0x115c <vfprintf+0x6ee>
    1158:	83 e0       	ldi	r24, 0x03	; 3
    115a:	bd cf       	rjmp	.-134    	; 0x10d6 <vfprintf+0x668>
    115c:	51 2c       	mov	r5, r1
    115e:	c0 cf       	rjmp	.-128    	; 0x10e0 <vfprintf+0x672>
    1160:	60 96       	adiw	r28, 0x10	; 16
    1162:	e2 e1       	ldi	r30, 0x12	; 18
    1164:	0c 94 d0 08 	jmp	0x11a0	; 0x11a0 <__epilogue_restores__>

00001168 <__prologue_saves__>:
    1168:	2f 92       	push	r2
    116a:	3f 92       	push	r3
    116c:	4f 92       	push	r4
    116e:	5f 92       	push	r5
    1170:	6f 92       	push	r6
    1172:	7f 92       	push	r7
    1174:	8f 92       	push	r8
    1176:	9f 92       	push	r9
    1178:	af 92       	push	r10
    117a:	bf 92       	push	r11
    117c:	cf 92       	push	r12
    117e:	df 92       	push	r13
    1180:	ef 92       	push	r14
    1182:	ff 92       	push	r15
    1184:	0f 93       	push	r16
    1186:	1f 93       	push	r17
    1188:	cf 93       	push	r28
    118a:	df 93       	push	r29
    118c:	cd b7       	in	r28, 0x3d	; 61
    118e:	de b7       	in	r29, 0x3e	; 62
    1190:	ca 1b       	sub	r28, r26
    1192:	db 0b       	sbc	r29, r27
    1194:	0f b6       	in	r0, 0x3f	; 63
    1196:	f8 94       	cli
    1198:	de bf       	out	0x3e, r29	; 62
    119a:	0f be       	out	0x3f, r0	; 63
    119c:	cd bf       	out	0x3d, r28	; 61
    119e:	09 94       	ijmp

000011a0 <__epilogue_restores__>:
    11a0:	2a 88       	ldd	r2, Y+18	; 0x12
    11a2:	39 88       	ldd	r3, Y+17	; 0x11
    11a4:	48 88       	ldd	r4, Y+16	; 0x10
    11a6:	5f 84       	ldd	r5, Y+15	; 0x0f
    11a8:	6e 84       	ldd	r6, Y+14	; 0x0e
    11aa:	7d 84       	ldd	r7, Y+13	; 0x0d
    11ac:	8c 84       	ldd	r8, Y+12	; 0x0c
    11ae:	9b 84       	ldd	r9, Y+11	; 0x0b
    11b0:	aa 84       	ldd	r10, Y+10	; 0x0a
    11b2:	b9 84       	ldd	r11, Y+9	; 0x09
    11b4:	c8 84       	ldd	r12, Y+8	; 0x08
    11b6:	df 80       	ldd	r13, Y+7	; 0x07
    11b8:	ee 80       	ldd	r14, Y+6	; 0x06
    11ba:	fd 80       	ldd	r15, Y+5	; 0x05
    11bc:	0c 81       	ldd	r16, Y+4	; 0x04
    11be:	1b 81       	ldd	r17, Y+3	; 0x03
    11c0:	aa 81       	ldd	r26, Y+2	; 0x02
    11c2:	b9 81       	ldd	r27, Y+1	; 0x01
    11c4:	ce 0f       	add	r28, r30
    11c6:	d1 1d       	adc	r29, r1
    11c8:	0f b6       	in	r0, 0x3f	; 63
    11ca:	f8 94       	cli
    11cc:	de bf       	out	0x3e, r29	; 62
    11ce:	0f be       	out	0x3f, r0	; 63
    11d0:	cd bf       	out	0x3d, r28	; 61
    11d2:	ed 01       	movw	r28, r26
    11d4:	08 95       	ret

000011d6 <__ftoa_engine>:
    11d6:	28 30       	cpi	r18, 0x08	; 8
    11d8:	08 f0       	brcs	.+2      	; 0x11dc <__ftoa_engine+0x6>
    11da:	27 e0       	ldi	r18, 0x07	; 7
    11dc:	33 27       	eor	r19, r19
    11de:	da 01       	movw	r26, r20
    11e0:	99 0f       	add	r25, r25
    11e2:	31 1d       	adc	r19, r1
    11e4:	87 fd       	sbrc	r24, 7
    11e6:	91 60       	ori	r25, 0x01	; 1
    11e8:	00 96       	adiw	r24, 0x00	; 0
    11ea:	61 05       	cpc	r22, r1
    11ec:	71 05       	cpc	r23, r1
    11ee:	39 f4       	brne	.+14     	; 0x11fe <__ftoa_engine+0x28>
    11f0:	32 60       	ori	r19, 0x02	; 2
    11f2:	2e 5f       	subi	r18, 0xFE	; 254
    11f4:	3d 93       	st	X+, r19
    11f6:	30 e3       	ldi	r19, 0x30	; 48
    11f8:	2a 95       	dec	r18
    11fa:	e1 f7       	brne	.-8      	; 0x11f4 <__ftoa_engine+0x1e>
    11fc:	08 95       	ret
    11fe:	9f 3f       	cpi	r25, 0xFF	; 255
    1200:	30 f0       	brcs	.+12     	; 0x120e <__ftoa_engine+0x38>
    1202:	80 38       	cpi	r24, 0x80	; 128
    1204:	71 05       	cpc	r23, r1
    1206:	61 05       	cpc	r22, r1
    1208:	09 f0       	breq	.+2      	; 0x120c <__ftoa_engine+0x36>
    120a:	3c 5f       	subi	r19, 0xFC	; 252
    120c:	3c 5f       	subi	r19, 0xFC	; 252
    120e:	3d 93       	st	X+, r19
    1210:	91 30       	cpi	r25, 0x01	; 1
    1212:	08 f0       	brcs	.+2      	; 0x1216 <__ftoa_engine+0x40>
    1214:	80 68       	ori	r24, 0x80	; 128
    1216:	91 1d       	adc	r25, r1
    1218:	df 93       	push	r29
    121a:	cf 93       	push	r28
    121c:	1f 93       	push	r17
    121e:	0f 93       	push	r16
    1220:	ff 92       	push	r15
    1222:	ef 92       	push	r14
    1224:	19 2f       	mov	r17, r25
    1226:	98 7f       	andi	r25, 0xF8	; 248
    1228:	96 95       	lsr	r25
    122a:	e9 2f       	mov	r30, r25
    122c:	96 95       	lsr	r25
    122e:	96 95       	lsr	r25
    1230:	e9 0f       	add	r30, r25
    1232:	ff 27       	eor	r31, r31
    1234:	e6 53       	subi	r30, 0x36	; 54
    1236:	ff 4f       	sbci	r31, 0xFF	; 255
    1238:	99 27       	eor	r25, r25
    123a:	33 27       	eor	r19, r19
    123c:	ee 24       	eor	r14, r14
    123e:	ff 24       	eor	r15, r15
    1240:	a7 01       	movw	r20, r14
    1242:	e7 01       	movw	r28, r14
    1244:	05 90       	lpm	r0, Z+
    1246:	08 94       	sec
    1248:	07 94       	ror	r0
    124a:	28 f4       	brcc	.+10     	; 0x1256 <__ftoa_engine+0x80>
    124c:	36 0f       	add	r19, r22
    124e:	e7 1e       	adc	r14, r23
    1250:	f8 1e       	adc	r15, r24
    1252:	49 1f       	adc	r20, r25
    1254:	51 1d       	adc	r21, r1
    1256:	66 0f       	add	r22, r22
    1258:	77 1f       	adc	r23, r23
    125a:	88 1f       	adc	r24, r24
    125c:	99 1f       	adc	r25, r25
    125e:	06 94       	lsr	r0
    1260:	a1 f7       	brne	.-24     	; 0x124a <__ftoa_engine+0x74>
    1262:	05 90       	lpm	r0, Z+
    1264:	07 94       	ror	r0
    1266:	28 f4       	brcc	.+10     	; 0x1272 <__ftoa_engine+0x9c>
    1268:	e7 0e       	add	r14, r23
    126a:	f8 1e       	adc	r15, r24
    126c:	49 1f       	adc	r20, r25
    126e:	56 1f       	adc	r21, r22
    1270:	c1 1d       	adc	r28, r1
    1272:	77 0f       	add	r23, r23
    1274:	88 1f       	adc	r24, r24
    1276:	99 1f       	adc	r25, r25
    1278:	66 1f       	adc	r22, r22
    127a:	06 94       	lsr	r0
    127c:	a1 f7       	brne	.-24     	; 0x1266 <__ftoa_engine+0x90>
    127e:	05 90       	lpm	r0, Z+
    1280:	07 94       	ror	r0
    1282:	28 f4       	brcc	.+10     	; 0x128e <__ftoa_engine+0xb8>
    1284:	f8 0e       	add	r15, r24
    1286:	49 1f       	adc	r20, r25
    1288:	56 1f       	adc	r21, r22
    128a:	c7 1f       	adc	r28, r23
    128c:	d1 1d       	adc	r29, r1
    128e:	88 0f       	add	r24, r24
    1290:	99 1f       	adc	r25, r25
    1292:	66 1f       	adc	r22, r22
    1294:	77 1f       	adc	r23, r23
    1296:	06 94       	lsr	r0
    1298:	a1 f7       	brne	.-24     	; 0x1282 <__ftoa_engine+0xac>
    129a:	05 90       	lpm	r0, Z+
    129c:	07 94       	ror	r0
    129e:	20 f4       	brcc	.+8      	; 0x12a8 <__ftoa_engine+0xd2>
    12a0:	49 0f       	add	r20, r25
    12a2:	56 1f       	adc	r21, r22
    12a4:	c7 1f       	adc	r28, r23
    12a6:	d8 1f       	adc	r29, r24
    12a8:	99 0f       	add	r25, r25
    12aa:	66 1f       	adc	r22, r22
    12ac:	77 1f       	adc	r23, r23
    12ae:	88 1f       	adc	r24, r24
    12b0:	06 94       	lsr	r0
    12b2:	a9 f7       	brne	.-22     	; 0x129e <__ftoa_engine+0xc8>
    12b4:	84 91       	lpm	r24, Z
    12b6:	10 95       	com	r17
    12b8:	17 70       	andi	r17, 0x07	; 7
    12ba:	41 f0       	breq	.+16     	; 0x12cc <__ftoa_engine+0xf6>
    12bc:	d6 95       	lsr	r29
    12be:	c7 95       	ror	r28
    12c0:	57 95       	ror	r21
    12c2:	47 95       	ror	r20
    12c4:	f7 94       	ror	r15
    12c6:	e7 94       	ror	r14
    12c8:	1a 95       	dec	r17
    12ca:	c1 f7       	brne	.-16     	; 0x12bc <__ftoa_engine+0xe6>
    12cc:	e0 e7       	ldi	r30, 0x70	; 112
    12ce:	f0 e0       	ldi	r31, 0x00	; 0
    12d0:	68 94       	set
    12d2:	15 90       	lpm	r1, Z+
    12d4:	15 91       	lpm	r17, Z+
    12d6:	35 91       	lpm	r19, Z+
    12d8:	65 91       	lpm	r22, Z+
    12da:	95 91       	lpm	r25, Z+
    12dc:	05 90       	lpm	r0, Z+
    12de:	7f e2       	ldi	r23, 0x2F	; 47
    12e0:	73 95       	inc	r23
    12e2:	e1 18       	sub	r14, r1
    12e4:	f1 0a       	sbc	r15, r17
    12e6:	43 0b       	sbc	r20, r19
    12e8:	56 0b       	sbc	r21, r22
    12ea:	c9 0b       	sbc	r28, r25
    12ec:	d0 09       	sbc	r29, r0
    12ee:	c0 f7       	brcc	.-16     	; 0x12e0 <__ftoa_engine+0x10a>
    12f0:	e1 0c       	add	r14, r1
    12f2:	f1 1e       	adc	r15, r17
    12f4:	43 1f       	adc	r20, r19
    12f6:	56 1f       	adc	r21, r22
    12f8:	c9 1f       	adc	r28, r25
    12fa:	d0 1d       	adc	r29, r0
    12fc:	7e f4       	brtc	.+30     	; 0x131c <__ftoa_engine+0x146>
    12fe:	70 33       	cpi	r23, 0x30	; 48
    1300:	11 f4       	brne	.+4      	; 0x1306 <__ftoa_engine+0x130>
    1302:	8a 95       	dec	r24
    1304:	e6 cf       	rjmp	.-52     	; 0x12d2 <__ftoa_engine+0xfc>
    1306:	e8 94       	clt
    1308:	01 50       	subi	r16, 0x01	; 1
    130a:	30 f0       	brcs	.+12     	; 0x1318 <__ftoa_engine+0x142>
    130c:	08 0f       	add	r16, r24
    130e:	0a f4       	brpl	.+2      	; 0x1312 <__ftoa_engine+0x13c>
    1310:	00 27       	eor	r16, r16
    1312:	02 17       	cp	r16, r18
    1314:	08 f4       	brcc	.+2      	; 0x1318 <__ftoa_engine+0x142>
    1316:	20 2f       	mov	r18, r16
    1318:	23 95       	inc	r18
    131a:	02 2f       	mov	r16, r18
    131c:	7a 33       	cpi	r23, 0x3A	; 58
    131e:	28 f0       	brcs	.+10     	; 0x132a <__ftoa_engine+0x154>
    1320:	79 e3       	ldi	r23, 0x39	; 57
    1322:	7d 93       	st	X+, r23
    1324:	2a 95       	dec	r18
    1326:	e9 f7       	brne	.-6      	; 0x1322 <__ftoa_engine+0x14c>
    1328:	10 c0       	rjmp	.+32     	; 0x134a <__ftoa_engine+0x174>
    132a:	7d 93       	st	X+, r23
    132c:	2a 95       	dec	r18
    132e:	89 f6       	brne	.-94     	; 0x12d2 <__ftoa_engine+0xfc>
    1330:	06 94       	lsr	r0
    1332:	97 95       	ror	r25
    1334:	67 95       	ror	r22
    1336:	37 95       	ror	r19
    1338:	17 95       	ror	r17
    133a:	17 94       	ror	r1
    133c:	e1 18       	sub	r14, r1
    133e:	f1 0a       	sbc	r15, r17
    1340:	43 0b       	sbc	r20, r19
    1342:	56 0b       	sbc	r21, r22
    1344:	c9 0b       	sbc	r28, r25
    1346:	d0 09       	sbc	r29, r0
    1348:	98 f0       	brcs	.+38     	; 0x1370 <__ftoa_engine+0x19a>
    134a:	23 95       	inc	r18
    134c:	7e 91       	ld	r23, -X
    134e:	73 95       	inc	r23
    1350:	7a 33       	cpi	r23, 0x3A	; 58
    1352:	08 f0       	brcs	.+2      	; 0x1356 <__ftoa_engine+0x180>
    1354:	70 e3       	ldi	r23, 0x30	; 48
    1356:	7c 93       	st	X, r23
    1358:	20 13       	cpse	r18, r16
    135a:	b8 f7       	brcc	.-18     	; 0x134a <__ftoa_engine+0x174>
    135c:	7e 91       	ld	r23, -X
    135e:	70 61       	ori	r23, 0x10	; 16
    1360:	7d 93       	st	X+, r23
    1362:	30 f0       	brcs	.+12     	; 0x1370 <__ftoa_engine+0x19a>
    1364:	83 95       	inc	r24
    1366:	71 e3       	ldi	r23, 0x31	; 49
    1368:	7d 93       	st	X+, r23
    136a:	70 e3       	ldi	r23, 0x30	; 48
    136c:	2a 95       	dec	r18
    136e:	e1 f7       	brne	.-8      	; 0x1368 <__ftoa_engine+0x192>
    1370:	11 24       	eor	r1, r1
    1372:	ef 90       	pop	r14
    1374:	ff 90       	pop	r15
    1376:	0f 91       	pop	r16
    1378:	1f 91       	pop	r17
    137a:	cf 91       	pop	r28
    137c:	df 91       	pop	r29
    137e:	99 27       	eor	r25, r25
    1380:	87 fd       	sbrc	r24, 7
    1382:	90 95       	com	r25
    1384:	08 95       	ret

00001386 <strnlen_P>:
    1386:	fc 01       	movw	r30, r24
    1388:	05 90       	lpm	r0, Z+
    138a:	61 50       	subi	r22, 0x01	; 1
    138c:	70 40       	sbci	r23, 0x00	; 0
    138e:	01 10       	cpse	r0, r1
    1390:	d8 f7       	brcc	.-10     	; 0x1388 <strnlen_P+0x2>
    1392:	80 95       	com	r24
    1394:	90 95       	com	r25
    1396:	8e 0f       	add	r24, r30
    1398:	9f 1f       	adc	r25, r31
    139a:	08 95       	ret

0000139c <strnlen>:
    139c:	fc 01       	movw	r30, r24
    139e:	61 50       	subi	r22, 0x01	; 1
    13a0:	70 40       	sbci	r23, 0x00	; 0
    13a2:	01 90       	ld	r0, Z+
    13a4:	01 10       	cpse	r0, r1
    13a6:	d8 f7       	brcc	.-10     	; 0x139e <strnlen+0x2>
    13a8:	80 95       	com	r24
    13aa:	90 95       	com	r25
    13ac:	8e 0f       	add	r24, r30
    13ae:	9f 1f       	adc	r25, r31
    13b0:	08 95       	ret

000013b2 <fputc>:
    13b2:	0f 93       	push	r16
    13b4:	1f 93       	push	r17
    13b6:	cf 93       	push	r28
    13b8:	df 93       	push	r29
    13ba:	fb 01       	movw	r30, r22
    13bc:	23 81       	ldd	r18, Z+3	; 0x03
    13be:	21 fd       	sbrc	r18, 1
    13c0:	03 c0       	rjmp	.+6      	; 0x13c8 <fputc+0x16>
    13c2:	8f ef       	ldi	r24, 0xFF	; 255
    13c4:	9f ef       	ldi	r25, 0xFF	; 255
    13c6:	2c c0       	rjmp	.+88     	; 0x1420 <fputc+0x6e>
    13c8:	22 ff       	sbrs	r18, 2
    13ca:	16 c0       	rjmp	.+44     	; 0x13f8 <fputc+0x46>
    13cc:	46 81       	ldd	r20, Z+6	; 0x06
    13ce:	57 81       	ldd	r21, Z+7	; 0x07
    13d0:	24 81       	ldd	r18, Z+4	; 0x04
    13d2:	35 81       	ldd	r19, Z+5	; 0x05
    13d4:	42 17       	cp	r20, r18
    13d6:	53 07       	cpc	r21, r19
    13d8:	44 f4       	brge	.+16     	; 0x13ea <fputc+0x38>
    13da:	a0 81       	ld	r26, Z
    13dc:	b1 81       	ldd	r27, Z+1	; 0x01
    13de:	9d 01       	movw	r18, r26
    13e0:	2f 5f       	subi	r18, 0xFF	; 255
    13e2:	3f 4f       	sbci	r19, 0xFF	; 255
    13e4:	31 83       	std	Z+1, r19	; 0x01
    13e6:	20 83       	st	Z, r18
    13e8:	8c 93       	st	X, r24
    13ea:	26 81       	ldd	r18, Z+6	; 0x06
    13ec:	37 81       	ldd	r19, Z+7	; 0x07
    13ee:	2f 5f       	subi	r18, 0xFF	; 255
    13f0:	3f 4f       	sbci	r19, 0xFF	; 255
    13f2:	37 83       	std	Z+7, r19	; 0x07
    13f4:	26 83       	std	Z+6, r18	; 0x06
    13f6:	14 c0       	rjmp	.+40     	; 0x1420 <fputc+0x6e>
    13f8:	8b 01       	movw	r16, r22
    13fa:	ec 01       	movw	r28, r24
    13fc:	fb 01       	movw	r30, r22
    13fe:	00 84       	ldd	r0, Z+8	; 0x08
    1400:	f1 85       	ldd	r31, Z+9	; 0x09
    1402:	e0 2d       	mov	r30, r0
    1404:	09 95       	icall
    1406:	89 2b       	or	r24, r25
    1408:	e1 f6       	brne	.-72     	; 0x13c2 <fputc+0x10>
    140a:	d8 01       	movw	r26, r16
    140c:	16 96       	adiw	r26, 0x06	; 6
    140e:	8d 91       	ld	r24, X+
    1410:	9c 91       	ld	r25, X
    1412:	17 97       	sbiw	r26, 0x07	; 7
    1414:	01 96       	adiw	r24, 0x01	; 1
    1416:	17 96       	adiw	r26, 0x07	; 7
    1418:	9c 93       	st	X, r25
    141a:	8e 93       	st	-X, r24
    141c:	16 97       	sbiw	r26, 0x06	; 6
    141e:	ce 01       	movw	r24, r28
    1420:	df 91       	pop	r29
    1422:	cf 91       	pop	r28
    1424:	1f 91       	pop	r17
    1426:	0f 91       	pop	r16
    1428:	08 95       	ret

0000142a <printf>:
    142a:	a0 e0       	ldi	r26, 0x00	; 0
    142c:	b0 e0       	ldi	r27, 0x00	; 0
    142e:	eb e1       	ldi	r30, 0x1B	; 27
    1430:	fa e0       	ldi	r31, 0x0A	; 10
    1432:	0c 94 c4 08 	jmp	0x1188	; 0x1188 <__prologue_saves__+0x20>
    1436:	ae 01       	movw	r20, r28
    1438:	4b 5f       	subi	r20, 0xFB	; 251
    143a:	5f 4f       	sbci	r21, 0xFF	; 255
    143c:	fa 01       	movw	r30, r20
    143e:	61 91       	ld	r22, Z+
    1440:	71 91       	ld	r23, Z+
    1442:	af 01       	movw	r20, r30
    1444:	80 91 e8 01 	lds	r24, 0x01E8	; 0x8001e8 <__iob+0x2>
    1448:	90 91 e9 01 	lds	r25, 0x01E9	; 0x8001e9 <__iob+0x3>
    144c:	0e 94 37 05 	call	0xa6e	; 0xa6e <vfprintf>
    1450:	e2 e0       	ldi	r30, 0x02	; 2
    1452:	0c 94 e0 08 	jmp	0x11c0	; 0x11c0 <__epilogue_restores__+0x20>

00001456 <putchar>:
    1456:	60 91 e8 01 	lds	r22, 0x01E8	; 0x8001e8 <__iob+0x2>
    145a:	70 91 e9 01 	lds	r23, 0x01E9	; 0x8001e9 <__iob+0x3>
    145e:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <fputc>
    1462:	08 95       	ret

00001464 <__ultoa_invert>:
    1464:	fa 01       	movw	r30, r20
    1466:	aa 27       	eor	r26, r26
    1468:	28 30       	cpi	r18, 0x08	; 8
    146a:	51 f1       	breq	.+84     	; 0x14c0 <__ultoa_invert+0x5c>
    146c:	20 31       	cpi	r18, 0x10	; 16
    146e:	81 f1       	breq	.+96     	; 0x14d0 <__ultoa_invert+0x6c>
    1470:	e8 94       	clt
    1472:	6f 93       	push	r22
    1474:	6e 7f       	andi	r22, 0xFE	; 254
    1476:	6e 5f       	subi	r22, 0xFE	; 254
    1478:	7f 4f       	sbci	r23, 0xFF	; 255
    147a:	8f 4f       	sbci	r24, 0xFF	; 255
    147c:	9f 4f       	sbci	r25, 0xFF	; 255
    147e:	af 4f       	sbci	r26, 0xFF	; 255
    1480:	b1 e0       	ldi	r27, 0x01	; 1
    1482:	3e d0       	rcall	.+124    	; 0x1500 <__ultoa_invert+0x9c>
    1484:	b4 e0       	ldi	r27, 0x04	; 4
    1486:	3c d0       	rcall	.+120    	; 0x1500 <__ultoa_invert+0x9c>
    1488:	67 0f       	add	r22, r23
    148a:	78 1f       	adc	r23, r24
    148c:	89 1f       	adc	r24, r25
    148e:	9a 1f       	adc	r25, r26
    1490:	a1 1d       	adc	r26, r1
    1492:	68 0f       	add	r22, r24
    1494:	79 1f       	adc	r23, r25
    1496:	8a 1f       	adc	r24, r26
    1498:	91 1d       	adc	r25, r1
    149a:	a1 1d       	adc	r26, r1
    149c:	6a 0f       	add	r22, r26
    149e:	71 1d       	adc	r23, r1
    14a0:	81 1d       	adc	r24, r1
    14a2:	91 1d       	adc	r25, r1
    14a4:	a1 1d       	adc	r26, r1
    14a6:	20 d0       	rcall	.+64     	; 0x14e8 <__ultoa_invert+0x84>
    14a8:	09 f4       	brne	.+2      	; 0x14ac <__ultoa_invert+0x48>
    14aa:	68 94       	set
    14ac:	3f 91       	pop	r19
    14ae:	2a e0       	ldi	r18, 0x0A	; 10
    14b0:	26 9f       	mul	r18, r22
    14b2:	11 24       	eor	r1, r1
    14b4:	30 19       	sub	r19, r0
    14b6:	30 5d       	subi	r19, 0xD0	; 208
    14b8:	31 93       	st	Z+, r19
    14ba:	de f6       	brtc	.-74     	; 0x1472 <__ultoa_invert+0xe>
    14bc:	cf 01       	movw	r24, r30
    14be:	08 95       	ret
    14c0:	46 2f       	mov	r20, r22
    14c2:	47 70       	andi	r20, 0x07	; 7
    14c4:	40 5d       	subi	r20, 0xD0	; 208
    14c6:	41 93       	st	Z+, r20
    14c8:	b3 e0       	ldi	r27, 0x03	; 3
    14ca:	0f d0       	rcall	.+30     	; 0x14ea <__ultoa_invert+0x86>
    14cc:	c9 f7       	brne	.-14     	; 0x14c0 <__ultoa_invert+0x5c>
    14ce:	f6 cf       	rjmp	.-20     	; 0x14bc <__ultoa_invert+0x58>
    14d0:	46 2f       	mov	r20, r22
    14d2:	4f 70       	andi	r20, 0x0F	; 15
    14d4:	40 5d       	subi	r20, 0xD0	; 208
    14d6:	4a 33       	cpi	r20, 0x3A	; 58
    14d8:	18 f0       	brcs	.+6      	; 0x14e0 <__ultoa_invert+0x7c>
    14da:	49 5d       	subi	r20, 0xD9	; 217
    14dc:	31 fd       	sbrc	r19, 1
    14de:	40 52       	subi	r20, 0x20	; 32
    14e0:	41 93       	st	Z+, r20
    14e2:	02 d0       	rcall	.+4      	; 0x14e8 <__ultoa_invert+0x84>
    14e4:	a9 f7       	brne	.-22     	; 0x14d0 <__ultoa_invert+0x6c>
    14e6:	ea cf       	rjmp	.-44     	; 0x14bc <__ultoa_invert+0x58>
    14e8:	b4 e0       	ldi	r27, 0x04	; 4
    14ea:	a6 95       	lsr	r26
    14ec:	97 95       	ror	r25
    14ee:	87 95       	ror	r24
    14f0:	77 95       	ror	r23
    14f2:	67 95       	ror	r22
    14f4:	ba 95       	dec	r27
    14f6:	c9 f7       	brne	.-14     	; 0x14ea <__ultoa_invert+0x86>
    14f8:	00 97       	sbiw	r24, 0x00	; 0
    14fa:	61 05       	cpc	r22, r1
    14fc:	71 05       	cpc	r23, r1
    14fe:	08 95       	ret
    1500:	9b 01       	movw	r18, r22
    1502:	ac 01       	movw	r20, r24
    1504:	0a 2e       	mov	r0, r26
    1506:	06 94       	lsr	r0
    1508:	57 95       	ror	r21
    150a:	47 95       	ror	r20
    150c:	37 95       	ror	r19
    150e:	27 95       	ror	r18
    1510:	ba 95       	dec	r27
    1512:	c9 f7       	brne	.-14     	; 0x1506 <__ultoa_invert+0xa2>
    1514:	62 0f       	add	r22, r18
    1516:	73 1f       	adc	r23, r19
    1518:	84 1f       	adc	r24, r20
    151a:	95 1f       	adc	r25, r21
    151c:	a0 1d       	adc	r26, r0
    151e:	08 95       	ret

00001520 <eeprom_read_byte>:
    1520:	f9 99       	sbic	0x1f, 1	; 31
    1522:	fe cf       	rjmp	.-4      	; 0x1520 <eeprom_read_byte>
    1524:	92 bd       	out	0x22, r25	; 34
    1526:	81 bd       	out	0x21, r24	; 33
    1528:	f8 9a       	sbi	0x1f, 0	; 31
    152a:	99 27       	eor	r25, r25
    152c:	80 b5       	in	r24, 0x20	; 32
    152e:	08 95       	ret

00001530 <eeprom_write_byte>:
    1530:	26 2f       	mov	r18, r22

00001532 <eeprom_write_r18>:
    1532:	f9 99       	sbic	0x1f, 1	; 31
    1534:	fe cf       	rjmp	.-4      	; 0x1532 <eeprom_write_r18>
    1536:	1f ba       	out	0x1f, r1	; 31
    1538:	92 bd       	out	0x22, r25	; 34
    153a:	81 bd       	out	0x21, r24	; 33
    153c:	20 bd       	out	0x20, r18	; 32
    153e:	0f b6       	in	r0, 0x3f	; 63
    1540:	f8 94       	cli
    1542:	fa 9a       	sbi	0x1f, 2	; 31
    1544:	f9 9a       	sbi	0x1f, 1	; 31
    1546:	0f be       	out	0x3f, r0	; 63
    1548:	01 96       	adiw	r24, 0x01	; 1
    154a:	08 95       	ret

0000154c <_exit>:
    154c:	f8 94       	cli

0000154e <__stop_program>:
    154e:	ff cf       	rjmp	.-2      	; 0x154e <__stop_program>
